4人目がトード・ミニマムを自分にかけると、回復しないバグ
■ キーワード ($ はアドレスを示す)
	ステータス:
		戦闘時に各キャラがかかっているステータス(石化など)。
		メモリ上 $7576 から 40h バイトごとに配置されている。

	ステータスキャッシュ:
		戦闘中の各計算処理で利用するため、一時的に各キャラのステータスを保存したもの。
		行動のターゲット側(以降 ターゲット側)のステータスが、 $E0 から 2h バイトごとに、
		行動した側(以降 行動側)のステータスが、 $F0 から 2h バイトごとに配置されている。

	蛙・小人フラグ
		蛙: 20
		小人: 08

■ 概要
	・トード・ミニマムは、行動側のステータスキャッシュは更新しない。
	  したがって、自身にトード・ミニマムをかけた場合、
	  行動側とターゲット側でステータスキャッシュに矛盾が生じる。
	  (行動側のステータスキャッシュは、トード・ミニマムをかける前の状態が維持される)

	・後の処理で行動側ステータスキャッシュがステータスに反映される。
	  このとき、フラグを立てる方向にしか反映されない。
	  行動側ステータスキャッシュに蛙・小人フラグが残っていると、
	  蛙・小人フラグが立ってしまう。

	・しかし、1-3人目の場合は、ステータスをキャッシュする処理の副作用により、矛盾が解消される。
      したがって、バグが発生しない。


以下、関連処理の解析
■ 戦闘メインループ。
	[$34:8074] battle_loop() {
		// 略。コマンド入力とかはここ
	$80c9:
		for ( 味方4+敵8の最大12体まで ) {
			[$34:8213] 戦闘時変数を初期化;
			[$34:9ba2] 行動名を描画;	//ex. "●ファイア"
			if ( [$35:a458] 味方側は戦闘継続が不可能 ) {	//全員 死亡 or 石化
				[$34:811c] 戦闘終了;	// 全滅
			}
			[$34:9de4] 選択した行動を実行する; // トード・ミニマムの場合 [$31:af77] do_special_attack
			[$35:a56f] 吸収や分裂が発生していたらメッセージを修正する;
			//
			// トード・ミニマムを自身へかけた場合、以下の処理は
			// [$34:93cd] update_player_status_by_cache を以下の順番で呼び出す
			// 1. 行動側($F0) 
			// 2. ターゲット側($EO)
			//
			[$34:8ff7] これまでの処理結果を反映して画面を描画する;
		}
	$80ff:
		// 略。毒の処理はここ
	}

■ 特殊攻撃(まほう、ちけい、アイテムなど)の処理。
	[$31:af77] do_special_attack() {
		// 略
		for ( 特殊攻撃のターゲット側全員 ) { // 敵側なら8体、味方側なら4体
			// NOTE:
			//	ターゲット側と行動者側が同じ場合(味方→味方 or 敵→敵)
			//	行動者のステータスキャッシュ($F0) がループごとに更新される
			//	(たとえば、ターゲット4人目の処理時に、3人目の処理結果が反映される)
			[$31:a2ba] cache_status();
			if ( 特殊攻撃のターゲット ) {
				特殊攻撃の処理を行う;	// トード・ミニマムの場合 [$31:b3f1] handle_toad_minimum();
			}
			必要なら死亡フラグを立てる;
		}
	}

■ ステータスをステータスキャッシュにコピーする処理。
	[$31:a2ba] cache_status() {
		// n := 味方番号 上から0,1,2,3
		[$E0 + $2 * n] ステータスキャッシュ(ターゲット側) ← ターゲットのステータス
		[$F0 + $2 * n] ステータスキャッシュ(行動側) ← 行動者のステータス
	}

■ トード・ミニマムの処理。
	// BUG:
	//	魔法のターゲット側のステータスキャッシュしか
	//	更新しないため、ターゲットが本人(行動者=ターゲット)の場合、
	//	ステータスキャッシュに矛盾が生じる。
	//
	[$31:b3f1] handle_toad_minimum() {
		[$7576 + $40 * n] ステータス ← 蛙と小人のフラグを反転;
		[$E0 + $2 * n] ステータスキャッシュ ← 処理後のステータス;
		if ( 蛙フラグまたは小人フラグが 0 → 1 ) {
			変化にかかったメッセージをキューにいれる; //"こびと" "かえる"
		} else {
			回復したメッセージをキューにいれる; //"おおきくなった" "もとにもどった"
		}
	}

■ ステータスキャッシュをステータスに反映させる処理。
	[$34:93cd] update_status_by_cache( [$f0 or $e0] ステータスキャッシュ ) {
		for ( 味方4人 ) {
			// n := 味方番号 上から0,1,2,3
			// NOTE:
			//	キャッシュと現行のステータスを OR しているため
			//	フラグが立つ方向の変化しか反映されない。
			//	たとえば 蛙:20 が クリアされて 00 になった場合、
			//	変化が反映されない。
			[$7576 + $40 * n] ステータス |= ステータスキャッシュ;	// キャッシュ内のフラグが優先されてしまう
			[$7577 + $40 * n] ステータス |= ステータスキャッシュ;	// キャッシュ内のフラグが優先されてしまう
		}
	}
