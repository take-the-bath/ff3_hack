[魔法エフェクト再生までの流れ]
processPlayerCommandInput($34:986c)
	=>
	プレイヤーの入力をうけつけ選択位置からコマンドidに変換し
	commandWindowHandlers ($34:9a16(file:69a26))をみて対応するハンドラに飛ばす
	(各ハンドラ)
		必要ならさらに入力処理を行い、対象フラグ、行動idをそのキャラの構造体に設定
		行動idは$78cf[iplayer]にも設定
executeAction($34:9de4)
	=>
	各キャラのポインタと行動id、対象フラグなどを保存する($7ec2 = actionId)
	commandHandlers[actionId] ($34:9fac(file:69fbc)) をみて行動に対応するハンドラに飛ばす
	(各ハンドラ) 
		計算処理など実際の効果を各キャラの構造体に設定
		エフェクトやメッセージ用のパラメータを設定($78d3,$78d5,$78d6~78da etc)
presentBattle($34:8ff7)
	=>
	一連の表示処理の定義を dispCommandListPtrTable ($34:950d)[$78d5]から取得
	定義はリストになっており順番に
	dispCommandHandlerTable($34:954d(file:6955d))をみて対応するハンドラにとばす
	(各ハンドラ)
		パラメータを見てメッセージを表示したりウインドウを表示したりする
		コマンド0b,0c,0dはエフェクト処理($34:8411を呼ぶ)
$34:8411
	=>
	$7ec2(コマンドid)を基に対応するハンドラに飛ばす(魔法は$7ec2= #14 => function01)
	(各ハンドラ)
		presentSceneThun($2e:9d56) を特定のパラメータで呼び出す(魔法は#1d)
presentSceneThunk($2e:9d56)
	x = $0052したうえでpresentSceceを呼び出す
presentScene($2f:af4e)
	=>
	[in] x : charIndex
	テーブル($2f:af74)をみて対応するハンドラに飛ばす

presentScene_1d($2f:b15e)
	=> dispatchEffect(#d)
		=> invokeEffect

invokeEffect($32:8000)
	=> テーブル($32:800f)をみて対応するハンドラに飛ばす

effect_0d($33:bafd)
	=> $33:b91a
		=> $33:b937
			=> beginActionEffect($33:b09b)

beginActionEffect($33:b09b)
	=> getActionEffectLoadParam($33:af6f)
		=> $7e8b[3] に $2e:91d0 + actionId($7e88) * 3 からの3バイトデータをコピー
	=> presentActionEffect($33:b68d)
		=> loadEffectSprites ($33:b589)
			=>
			$7e = ($7e8b & #40) != 0 ? #a600 : #9600;
			$7e += $33:beb2 + a*6;
			$7eをソースとしてvramにコピー
		actionId($7e88)をindexにしてテーブル($06:8c00) からポインタを取得
		($06:ptr)からの100hバイトを$7300にコピー、エフェクトの各フレーム用情報が入ってる
		targetIndicator($7e89)をみてビットが立っていたら対象キャラの上にエフェクトを表示する
		=> presentEffectFrameAtTarget($33:b711)
			=> 
			loadEffectFrame($33:b7cf)
			
	
loadEffectFrame($33:b7cf)
	=> 
	ptr = $00:9708 + $7300.frameIndex
	SpriteTileParam $7900 = $00:ptr
	initEffectSpriteProperty(33:b8af)
======================================================================================================
SpriteLoadParam $7e8b = [$2e:91d0 + actionId($7e88) * 3];
	ex. フレア: 00 91 bd
Sprite * $7e = base + spriteLoadParam[1] * 10h;
	where base = spriteLoadParam[0] & 40h ? $a600 : $9600
	ex. フレア 910h + 9600 = 9f10h
CopyVramParam * $18 = $33:beb2 + (index * 6);
	where index = 7 or 8 / 5 or 6
		//loadEffectSpritesWorker(a = 7);	//bf24
		//return loadEffectSpritesWorker_base0(a = 8); //bf1e
	ex. フレア $2a:9f10(55f10) => vram:1490

$7e += copyParam.srcOffset

EffectFrameStream $7300 = *( $06: ($06:8c00[ actionId(=$7e88) ] ) ); //max 100h bytes data
	ex. フレア $06:8cb6 {
		08
		2F 30 31 32 2F 30 31 32
	}
SpriteTileParam $7900 = * ($00:9708[ frameParamId($7300+x) & #7f ] ); //max 24h bytes data
	ex. フレア 
		2f: $00:9bd3 = *$00:9766 (9766= 9708+2f*2)
			00 01 7F 02 03 7F
			40 41 7F 42 43[FF
			02]04 05 7F 00 01
			7F 06 07 7F 40 41
			02 03 7F 04 05 7F
			42 43 7F 06 07 7F
		30: $00:9bf7
			02 03 7F 04 05 7F
			42 43 7F 06 07[FF
			05]         02 03
			[FF04]      42 43
			04 05[FF04]     
			06 07[FF04]
		31: $00:9c12
			04 05[FF04]
			06 07[FF05]
			   00 01 7F 04 05
			7F 40 41 7F 06 07
			[FF03]   00 01[FF
			04]      40 41 7F
		32: $00:9c2e
			[FF03]   00 01[FF
			04]      40 41[FF
			02]02 03[FF04]
			   42 43[FF03]
			00 01 7F 02 03 7F
			40 41 7F 42 43 7F
======================================================================================================
階層移動によるスタック領域の消費
battleLoop($34:8074)開始時におけるスタックポインタ(S)の値
	フィールド: f7
	ダンジョン第1階層: f5
	第2: f0
	以後5バイトずつ使用
	window描画ルーチン末端:0187

*サウンドドライバの性能
	1回の処理でだいたい10scanline相当の時間(1200クロック前後)
	戦闘中はirq中に呼び出し(ウインドウとの境界線上で起きる)
	フィールドでは表示中の画面次第で描画が終わったあと等に呼び出し
======================================================================================================
武器種類判定
$31:aa54(file:62a64ヘッダこみ) c9 46  cmp #$46 ;竪琴(が始まるID,以下同じ)
aa61 cmp #$4a ;弓
aa6e cmp #$4f ;矢
aa7b cmp #$58 ;盾

aa90 cmp #$46
aa9c cmp #$58
aaae cmp #$4a
aaba cmp #$4f
aad6 cmp #$58
aafa cmp #$58

片手遠距離判定
a3c8 cmp #$42	;範囲の終わり，この値は含まない
a3cc cmp #$3f	;範囲の始まり，この値も含む
a3d4 cmp #$42
a3d8 cmp #$3f
a3e7 cmp #$42
a3eb cmp #$3f
a3f3 cmp #$42
a3f7 cmp #$3f
======================================================================================================
b8fd callers:

b961 b74a ae18 8064

$ab はボス撃破フラグなど? cmp #$40 bcs が条件

戦闘移行時 $00-$c0 => $7480-
戦闘終了時 $7480- => $00-
======================================================================================================
each bank's usage:
$2e,2f: battle effect system
$30,31: battle detail calcs
	ダメージ計算やステータス効果適用など
$32,33: battle effect play (animation)
$34,35: battle system
	基幹のループやUI(ウインドウ)処理
$3e,3f: basic functions (mul,div,irq,nmi,memcpy,switchBank etc)
======================================================================================================
ステートセーブ
$14: a,x,y
$19: pc (big endian)
MPRD+0a: u16 banks[4]

-  nnnesterJ0.23だとフィールドで魔法か装備を選択するとハングする
   $34:8064 が jsr $b4f9 (20 f9 b4) になぜか化けているのが原因だが何故そうなるのか不明
   正しくは jsr $b50a (20 0a b5) => 古いバージョンのipsを自動で読み込んでいた
======================================================================================================
nes on ntsc = 60hz (0.016s)
cpu = 1.79mhz

113clocks per scanline

262(of 20 is v-blank) scanlines

 HT=> VT => H => V => FV
HT [ 43210 ]
=> VT [

フレーム開始時に スクロールレジスタ(t) => VRAMアドレス(v)
スキャンライン開始時に スクロールレジスタのxとBG選択の下位bit(t) => VRAMアドレスの該当部分(v)
*x成分は更新されるがy成分はそのまま


$7300-73ff ダンジョンマップでは未使用？
SEは96dまで

=====================================================================
追加ダンジョン敵

空いてるステータスID:2a,2b,2c,27,29,2d,2e,47,51,69,84,97

 27 => 12x50% 70
 29 => 30x80% 160
 2a => 20x15% 120 aniel
 2b => 14x70% 210
 2c => 32x10% 10
 2d => 8x70% 0
 2e => 11x110% 160
 47 => 12x95% 255
 51 => 16x25% 20
 69 => 5x50% 230
 84 => 28x100% 255
 97 => 5x70% 30 aniel
空いてる敵
 16 マンドレイク => アニエル
 59 さまようきんか
 63 キャプテン => アサシン
 66 フェニックス => テツキョジン
 8d ホブゴブリン => リルマーダー
 be スプリガン => デュアルバイター
 bf テリブルドラゴン

* アニエル(アズリエルEX)
 絵はアズリエルの色違い
 最強分裂モンスター
 「あんこく」用
 lv:80
 hp:11000 = 10000
 skilllv:96
 int/men: 66/66
 atk:14x70%(210) [2b] , 吸収属性/毒追加
 def:5x70%(30) [97] ,暗黒以外吸収/暗黒に弱い
 mdef:20x15%(120) [2a] ,毒無効
 分裂・増殖・ドレイン(25%)

*アサシン (ニンジャEX)
 首を跳ねてくる恐ろしい奴ら
 やられるまえにやれ ブラインが有効
 「カウンター」用
 hp:3000 => 2400
 lv:96
 atk:12x75%(175) [2e],即死追加
 def:16x25%(20) [51] , 全半
 mdef:5x50%(230) [69] , 即死/石化無効
 ブライン(50%)

*リルマーダー
 絵はゴブリン
 数と多彩な手で支援に回る
 意外と打撃が強い
 単体で出たときより他と組み合わされたときに真価を発揮する
 ステータス攻撃に弱い
 「乱れ撃ち」用
 hp:4000 => 3300
 lv:64
 joblv:128
 int/men:0/0
 atk:14x70%(210) [2b]
 def:32x10%(10) [2c]
 mdef:12x50%(70) [27]
 ライブラ・ケアルガ・エスナ・リフレク・プロテス・ヘイスト・サイレス (50%)

*デュアルバイター
 2ヘッドドラゴン
 体力と攻撃回数で圧倒してくる肉体派
 命中回数の多さで追加効果も入りやすい
 攻撃回数が半端ないため防御力がないと強烈なダメージを受ける
 魔法に弱い
 「ちょうはつ」用
 lv:98
 hp:15000 => 12000
 atk:30x80%(160) [29], 沈黙追加
 def:5x60%(64) [6c]
 mdef:5x50%(11) [3e], 石化・精神系 無効

*テリブルドラゴン
 ボツモンスターが今蘇る
 強烈な打撃力と多彩な全体攻撃で攻めてくる
 バリアチェンジまで使う強敵
 「ふみこむ」用
 lv:128
 joblv:224
 int/men:90/90
 hp:20000 => 20000
 atk:12x95%(255) [47], 徐々に石化2/4
 def:5x50%(11) [3e], 地火冷雷 吸収
 mdef:8x70%(0) [2d], 石化・暗闇・精神系無効
 ほのお・れいき・かみなり・じしん・バリアチェンジ
 フレア・イレース

*さまようきんか
 レアモンスターがひと時のやすらぎ
 戦闘力はまったくなく出てくるとほっとするモンスター
 ドロップが良い
 hp:2500
 drop: (2/7) エリクサー・きんきらのつるぎ・ラグナロク
 gil:10000

*テツキョジン /ボス
 DS化を名乗る以上こいつがいないとはじまらない
 hp:65000
 atk:28x100%(255) [84],沈黙追加
 def:7x70%(100) [7c], 全半
 mdef:12x70%(55) [2a], ステータス無効
 ざんてつけん・フレア・トード・ざんてつけん・イレース・デス・ざんてつけん (75%)
=======================================================================================================
空いている敵パーティID:
 f2,f4-ff

59,8d,9f,b3(空の敵パーティ)を参照する遭遇ID:
	59:116
	8d:047,093,199
	9f:0a8,152,1ab
	b3:0be,166,1bf

047,093,0a8,0be
116,152,166,199,1ab,1bf

不正っぽい遭遇ID:
1e8 - 1ea

空いている出現数定義ID:
0a,
01,02,04,09,0b,0f,13,14,15,16

[組み合わせ]
1F
 スレイプニル4-6
 クムクム4-6
 ほのおのまじん4-6
 クムクム6
 レッドドラゴン1
 グリーンドラゴン1
 イエロードラゴン1
 さまようきんか1-8
2F
 アニエル 2-5
 リルマーダー 4-7
 デュアルバイター 2
 アサシン 3-4 リルマーダー 0-2
 //アズリエルEX 2 リルマーダー2
 テリブルドラゴン1
 さまようきんか1-8
 アーリマン 2

todo
ヘイスト%落とす
リルマーダーうざい
全体的に特殊率落とす
全体的に攻撃力あげる
全体的に防御力下げる
アサシンの属性防御外す