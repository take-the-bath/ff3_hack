; da65 V2.11.0 - (C) Copyright 2000-2005,  Ullrich von Bassewitz
; Created:    2017-12-31 12:46:19
; Input file: D:\Documents\programming\eclipse workspaces\ff3\hack-and-patch\work\base-binary\ff3_plain.nes.noheader
; Page:   1


    .setcpu "65C02"

; ----------------------------------------------------------------------------
dispatchBattleFunction:= $8012              ; bank $34
setCurrentPlayerPtrs:= $806C                ; bank $34
battleLoop  := $8074; bank $34
endBattle   := $8160; bank $34
presentCharacter:= $8185; bank $34
battle.init_players_defence_powers:= $81A0  ; bank $34
initBattleVars  := $8213; bank $34
battle.increment_number_of_command_selection:= $8271; bank $34
updatePlayerBaseParams:= $8306              ; bank $34
beginBattlePhase:= $8374; bank $34
playEffect  := $8411; bank $34
playEffect_0F   := $8460; bank $34
playEffect_0e   := $8470; bank $34
buildEnemyDeadBits:= $8496                  ; bank $34
playEffect_0d   := $84D7; bank $34
playEffect_0c   := $84F6; bank $34
playEffect_0b   := $84FB; bank $34
playEffect_09   := $850A; bank $34
effect08    := $8516; bank $34
effect06    := $8528; bank $34
effect07    := $852D; bank $34
set52toActorIndexFromEffectBit:= $8532      ; bank $34
playEffect_04   := $853B; bank $34
playEffect_05   := $8540; bank $34
dispatchPresentScene_1f:= $8545             ; bank $34
playEffect_03   := $8576; bank $34
playEffect_01   := $8577; bank $34
playEffect_00   := $8613; bank $34
doNothing_8689  := $8689; bank $34
showDamage  := $868A; bank $34
targetBitToCharIndex:= $86AB                ; bank $34
set_encounter_mode:= $87BE                  ; bank $34
setPlayerPtrs   := $88E1; bank $34
loadCursorSprites:= $8902                   ; bank $34
tileSprites2x2  := $892E; bank $34
loadAndInitCursorPos:= $8966                ; bank $34
getInputAndUpdateCursorWithSound:= $899E    ; bank $34
getInputAndUpdateCursor_OnB:= $89DE         ; bank $34
getInputAndUpdateCursor_OnA:= $89E6         ; bank $34
getInputAndUpdateCursor_OnUp:= $89EE        ; bank $34
getInputAndUpdateCursor_OnLeft:= $8A82      ; bank $34
getInputAndUpdateCursor_OnRight:= $8A9F     ; bank $34
getInputAndUpdateCursor_OnStartOrSelect:= $8ABE ; bank $34
getInputAndUpdateCursor_end:= $8AC1         ; bank $34
moveSelection_dispatchInput_inputHandlers8:= $8ACF; bank $34
init4SpritesAt$0220:= $8ADF                 ; bank $34
draw8LineWindow := $8B38; bank $34
putWindowSideBorderTile:= $8C56             ; bank $34
putWindowTopBottomBorderTile:= $8C84        ; bank $34
setBackgroundProperty:= $8D03               ; bank $34
draw1RowWindow  := $8D1B; bank $34
drawBorder  := $8DE5; bank $34
eraseWindow := $8EB0; bank $34
eraseFromLeftBottom0Bx0A:= $8F0B            ; bank $34
getSortedIndex  := $8F57; bank $34
sort        := $8F6F; bank $34
presentBattle   := $8FF7; bank $34
dispCommand_05_showActorName:= $905B        ; bank $34
dispCommand_06_showActionName:= $90A0       ; bank $34
dispCommand_07_showTargetName:= $9177       ; bank $34
setNoTargetMessage:= $91CE                  ; bank $34
dispCommand_08_show_effect_message:= $91D4  ; bank $34
dispCommand_09_show_message:= $91FE         ; bank $34
dispCommand09_sub00:= $923C                 ; bank $34
loadStatusMessage:= $9245                   ; bank $34
drawMessageWindow:= $9253                   ; bank $34
dispCommand09_sub01:= $925F                 ; bank $34
waitPad1ADown   := $926B; bank $34
dispCommand09_sub02:= $9275                 ; bank $34
printHp     := $92B5; bank $34
dispCommand09_sub03:= $92DB                 ; bank $34
dispCommand09_sub04:= $932B                 ; bank $34
dispCommand_0B  := $934E; bank $34
dispCommand_0C  := $9354; bank $34
dispCommand_0D  := $935F; bank $34
dispCommand_0E  := $93C4; bank $34
updatePlayerStatus:= $93CD                  ; bank $34
updateEnemyStatus:= $9408                   ; bank $34
dispCommand_0A_waitForAButtonDownOrMessageTimeOut:= $9450; bank $34
dispCommand_00010204_closeWindow:= $94D6    ; bank $34
dispCommand_03_back4or5CommandIfMessageRemainsElseClose:= $94E7; bank $34
functionTableFor$8ff7_presentBattle0x0e:= $954D ; bank $34
setTableBaseAddrTo$8a40:= $95BD             ; bank $34
setTableBaseAddrTo$8c40:= $95C6             ; bank $34
setTableBaseAddrTo$00e0:= $95CF             ; bank $34
setTableBaseAddrTo$00f0:= $95D8             ; bank $34
itoa_16     := $95E1; bank $34
countAndDecrementUntil0:= $9648             ; bank $34
strToTileArray  := $966A; bank $34
putDakuten  := $96F9; bank $34
putHandakuten   := $9707; bank $34
getPrevLinePtr  := $9715; bank $34
strToTileArray_OnLinefeed:= $9735           ; bank $34
strToTileArray_OnChar02:= $9745             ; bank $34
initTileArrayStorage:= $9754                ; bank $34
calcActionOrder := $9777; bank $34
getCommandInput := $986C; bank $34
rewindCharacterIndex:= $9A42                ; bank $34
commandWindow_OnCommand0001090a13:= $9A68   ; bank $34
createCommandWindow:= $9A69                 ; bank $34
putCanceledItem := $9AE7; bank $34
playSoundEffect := $9B79; bank $34
setYtoOffsetOf  := $9B88; bank $34
setYtoOffset03  := $9B8D; bank $34
setYtoOffset2F  := $9B94; bank $34
setYtoOffset2E  := $9B9B; bank $34
drawInfoWindow  := $9BA2; bank $34
battle.cache_players_status:= $9D06         ; bank $34
cachePlayerStatus:= $9D1D                   ; bank $34
drawEnemyNamesWindow:= $9D9E                ; bank $34
executeAction   := $9DE4; bank $34
setActorCommandIdAndClearMode:= $9F7B       ; bank $34
setActionTargetToSelf:= $9F87               ; bank $34
handleCommand00_0a_do_nothing:= $9FA8       ; bank $34
actionHandlers0x15:= $9FAC                  ; bank $34
executeAction_summon:= $9FD6                ; bank $34
command_fight   := $A104; bank $35
getIndexOfGreatest:= $A30F                  ; bank $35
consumeEquippedItem:= $A353                 ; bank $35
handleCommand14_castMagic:= $A367           ; bank $35
handleCommand13_useItem:= $A3BB             ; bank $35
getActor2C  := $A42E; bank $35
endInputCommand := $A433; bank $35
battle.can_continue:= $A458                 ; bank $35
fireCannon  := $A50B; bank $35
updatePlayerOffset:= $A541                  ; bank $35
initString  := $A549; bank $35
offset$4E_16    := $A558; bank $35
getSys1Random   := $A564; bank $35
modifyActionMessage:= $A56F                 ; bank $35
battle.load_string:= $A609                  ; bank $35
commandWindow_OnForwardSelected:= $A71C     ; bank $35
commandWindow_OnBack:= $A750                ; bank $35
showArrowAndDecideCommand:= $A784           ; bank $35
movePosition_end:= $A7C8; bank $35
initMoveArrowSprite:= $A7CD                 ; bank $35
command_forward := $A7DF; bank $35
command_back    := $A7EA; bank $35
getInvertedLineFlag:= $A816                 ; bank $35
Point       := $A823; bank $35
Point       := $A833; bank $35
commandWindow_OnAttackSelected:= $A843      ; bank $35
commandWindow_selectSingleTargetAndGoNext:= $A848; bank $35
commandWindow_OnGuard:= $A877               ; bank $35
command_guard   := $A881; bank $35
commandWindow_OnEscapeSelected:= $A8AB      ; bank $35
commandWindow_OnSneakAway:= $A8B5           ; bank $35
command_escape  := $A8BF; bank $35
command_sneakAway:= $A93B                   ; bank $35
commandWindow_OnJump:= $A9AB                ; bank $35
command_jump    := $A9D8; bank $35
command_09_landing:= $AA11                  ; bank $35
commandWindow_0b_geomance:= $AA22           ; bank $35
getCommandInput_goNextCharacter:= $AA56     ; bank $35
command_0b  := $AA5D; bank $35
getCurrentTerrain:= $AAC3                   ; bank $35
geomanceTargetFlag:= $AB06                  ; bank $35
commandWindow_OnDetect:= $AB07              ; bank $35
command_detect  := $AB0C; bank $35
setEffectHandlerTo18:= $AB66                ; bank $35
commandWindow_OnInspect:= $AB6E             ; bank $35
command_inspect := $AB73; bank $35
commandWindow_OnSteal:= $AB9F               ; bank $35
command_steal   := $ABA4; bank $35
commandWindow_OnChargeSelected:= $AC65      ; bank $35
command_charge  := $AC6F; bank $35
commandWindow_OnSing:= $ACD0                ; bank $35
command_sing    := $ACD5; bank $35
commandWindow_OnIntimidate:= $AD0C          ; bank $35
command_intimidate:= $AD16                  ; bank $35
commandWindow_OnCheer:= $AD6B               ; bank $35
command_cheer   := $AD75; bank $35
commandWindow_OnItemSelected:= $ADAF        ; bank $35
itemWindow_OnAButton:= $AF4C                ; bank $35
itemWindow_OnB  := $B198; bank $35
endItemWindow   := $B1B0; bank $35
loadTileArrayOfItemProps:= $B1D8            ; bank $35
isHandFreeForItem:= $B242                   ; bank $35
itemWindow_scrollRight:= $B2A7              ; bank $35
itemWindow_scrollLeft:= $B362               ; bank $35
drawEquipWindow := $B419; bank $35
loadTileArrayForItemWindowColumn:= $B48B    ; bank $35
itemWindow_moveCursor:= $B4D4               ; bank $35
itemWindow_OnUse:= $B4F7; bank $35
drawEquipWindowNoErase:= $B5F9              ; bank $35
redrawColumn    := $B601; bank $35
commandWindow_OnMagic:= $B646               ; bank $35
magicWindow_OnUp:= $B7F9; bank $35
magicWindow_OnDown:= $B82A                  ; bank $35
magicWindow_OnLeft:= $B863                  ; bank $35
magicWindow_OnRight:= $B86C                 ; bank $35
magicWindow_OnSelectOrStart:= $B874         ; bank $35
magicWindow_OnA := $B877; bank $35
magicWindow_OnB := $B8EE; bank $35
isPlayerAllowedToUseItem:= $B8FD            ; bank $35
flagJob     := $B93E; bank $35
setMagicTarget  := $B953; bank $35
setItemEffectTarget:= $B979                 ; bank $35
commandWindow_OnMagic_inputHandlers8:= $BA2A    ; bank $35
loadTo7400FromBank30:= $BA3A                ; bank $35
battle.on_turn_end:= $BA41                  ; bank $35
battle.characters.on_turn_end:= $BADC       ; bank $35
prize       := $BB49; bank $35
battle.grow_player:= $BF7C                  ; bank $35
incrementItem   := $BFB3; bank $35
beginBattle := $C049; bank $3e
menu.opening.title_page:= $C06E             ; bank $3e
field.enterDungeon:= $C1BB                  ; bank $3e
field.dispatchInput:= $C243                 ; bank $3e
field_OnStart   := $C269; bank $3e
field_doScroll  := $C389; bank $3e
field_setScroll := $C398; bank $3e
field.init_sprites_cache:= $C486            ; bank $3e
field.OnMove    := $C4FC; bank $3e
field       := $C6B9; bank $3e
field.OnCharacterMoved:= $C6D5              ; bank $3e
field.getRandom := $C711; bank $3e
floor.getObjectEventPtr:= $C72C             ; bank $3e
field.call_sound_driver:= $C750             ; bank $3e
field.call_sound_driver_and_restore_banks:= $C758; bank $3e
dive_into_float_land:= $C966                ; bank $3e
switchToBank3C  := $C98A; bank $3e
field.update_window_attr_buff:= $C98F       ; bank $3e
field.set_bg_attr_for_window:= $C9A9        ; bank $3e
field.merge_bg_attributes_with_buffer:= $CAB1   ; bank $3e
field.copyToVramWith_07d0:= $CB6B           ; bank $3e
field.loadWarpDestinationFloor:= $CBA4      ; bank $3e
loadFloorData   := $CBFA; bank $3e
field.loadMapRow:= $CC47; bank $3e
field.getMapDataPointers:= $CCBB            ; bank $3e
vehicleSpeeds   := $CD76; bank $3e
getVehicleSpeed := $CD7E; bank $3e
getTileParamsVertical:= $CE7A               ; bank $3e
menu.call_recalc_character_params:= $D10B   ; bank $3e
field.get_eligibility_flags:= $D113         ; bank $3e
field.load_label_text_into_buffer:= $D1B1   ; bank $3e
field.queue_SE_of_valid_action:= $D20D      ; bank $3e
field.queue_SE_of_move_of_cursor:= $D213    ; bank $3e
floor.getInputOrFireObjectEvent:= $D219     ; bank $3e
field.getAndMaskInput:= $D27A               ; bank $3e
field.get_input := $D281; bank $3e
field_maskInput := $D29A; bank $3e
field.upload_all_palette_entries:= $D308    ; bank $3e
field.clear_all_sprites:= $D336             ; bank $3e
field.upload_bg_palette:= $D381             ; bank $3e
menu.queue_SE_of_invalid_action:= $D529     ; bank $3e
floor.load_object_sprite_into_buffer:= $DA3A    ; bank $3e
loadPatternToVramEx:= $DE0F                 ; bank $3e
loadPatternToVram:= $DE1A                   ; bank $3e
loadSmallPatternToVram:= $DE2A              ; bank $3e
floor.loadPatternForTiles:= $DE5A           ; bank $3e
loadTilePatternToVram:= $DEEA               ; bank $3e
floor.loadObjectPatterns:= $DF08            ; bank $3e
floor.loadObjectPattern:= $DF41             ; bank $3e
dungeon.mainLoop:= $E1DC; bank $3f
floor.getInputAndHandleEvent:= $E2F8        ; bank $3f
floor.fireOnMove:= $E396; bank $3f
floor.getEventSourceCoodinates:= $E4E9      ; bank $3f
floor.getChipEvent:= $E51C                  ; bank $3f
floor.event05   := $E69B; bank $3f
floor.event07   := $E6BE; bank $3f
dungeon.loadFloor:= $E7EC                   ; bank $3f
dungeon.loadFloorData:= $E803               ; bank $3f
floor.processChipEvent:= $E917              ; bank $3f
OnTreasure  := $E982; bank $3f
floor.getObjectEvent:= $E9BB                ; bank $3f
floor.loadEventScriptStream:= $EA04         ; bank $3f
floor.cache_event_script:= $EA1B            ; bank $3f
floor.getEvent  := $EA26; bank $3f
switch_to_object_params_bank:= $EB23        ; bank $3f
switch_to_floor_logics_bank:= $EB28         ; bank $3f
field.scrolldown_item_window:= $EB2D        ; bank $3f
field.abort_item_window_scroll:= $EB3C      ; bank $3f
field.do_scrolldown_item_window:= $EB43     ; bank $3f
field.reflect_window_scroll:= $EB61         ; bank $3f
field.scrollup_item_window:= $EB69          ; bank $3f
field.seek_text_to_next_line:= $EBA9        ; bank $3f
field.unseek_text_to_line_beginning:= $EBD1 ; bank $3f
field.show_sprites_on_lower_half_screen:= $EC0C ; bank $3f
field.show_sprites_on_region7:= $EC12       ; bank $3f
field.hide_sprites_under_window:= $EC18     ; bank $3f
field.showhide_sprites_by_region:= $EC1A    ; bank $3f
u8          := $EC67; bank $3f
field.show_message_UNKNOWN:= $EC83          ; bank $3f
field.show_message_window:= $EC8B           ; bank $3f
field.show_window:= $EC8D                   ; bank $3f
field.await_and_get_new_input:= $ECAB       ; bank $3f
field.get_next_input:= $ECBD                ; bank $3f
field.get_next_input:= $ECC4                ; bank $3f
field.advance_frame_with_sound:= $ECD8      ; bank $3f
field.draw_window_top:= $ECE5               ; bank $3f
restore_banks_by_$57:= $ECF5                ; bank $3f
field.draw_in_place_window:= $ECFA          ; bank $3f
field.draw_window_box:= $ED02               ; bank $3f
field.init_window_attr_buffer:= $ED56       ; bank $3f
field.get_window_region:= $ED61             ; bank $3f
field.draw_window_row:= $EDC6               ; bank $3f
field.sync_ppu_scroll:= $EDE1               ; bank $3f
field.getWindowTilesForTop:= $EDF6          ; bank $3f
field.getWindowTilesForMiddle:= $EE1D       ; bank $3f
field.getWindowTilesForBottom:= $EE3E       ; bank $3f
field.stream_string_in_window:= $EE65       ; bank $3f
field.load_and_draw_string:= $EE9A          ; bank $3f
field.draw_string_in_window:= $EEC0         ; bank $3f
textd.draw_in_box:= $EEFA                   ; bank $3f
textd.eval_replacement:= $F02A              ; bank $3f
field.string.eval_code_10_13:= $F239        ; bank $3f
field.get_max_available_job_id:= $F38A      ; bank $3f
textd.setup_output_ptr_to_next_column:= $F3AC   ; bank $3f
textd.save_text_ptr:= $F3E4                 ; bank $3f
textd.restore_text_ptr:= $F3ED              ; bank $3f
textd.trim_name_left:= $F3FA                ; bank $3f
field.set_vram_addr_for_window:= $F40A      ; bank $3f
field.get_vram_addr_of_line_above:= $F435   ; bank $3f
menu.erase_message_area:= $F44B             ; bank $3f
menu.erase_box_1e_x_14:= $F461              ; bank $3f
menu.erase_box_1e_x_1c:= $F465              ; bank $3f
menu.erase_box_of_width_1e:= $F467          ; bank $3f
menu.erase_box_from_bottom:= $F47A          ; bank $3f
floor.get_treasure:= $F549                  ; bank $3f
floor.get_treasure_item_id:= $F5C4          ; bank $3f
floor.get_item_price:= $F5D4                ; bank $3f
increment_gil   := $F5FF; bank $3f
invert_treasure_loot_flag:= $F640           ; bank $3f
field.calc_draw_width_and_init_window_tile_buffer:= $F670; bank $3f
field.init_window_tile_buffer:= $F683       ; bank $3f
field.draw_window_content:= $F692           ; bank $3f
field.upload_window_content:= $F6AA         ; bank $3f
switch_to_character_logics_bank:= $F727     ; bank $3f
call_doBattle   := $F800; bank $3f
thunk.call_recalc_character_params:= $F803  ; bank $3f
thunk.call_get_eligibility_for_item:= $F806 ; bank $3f
field.call_get_eligibility_for_item:= $F817 ; bank $3f
field.call_recalc_character_params:= $F820  ; bank $3f
field.back_to_field_mode_with_result:= $F826    ; bank $3f
field.switch_to_battle_mode:= $F82C         ; bank $3f
field.restore_variables_from_battle_mode:= $F83B; bank $3f
call_32_8000    := $F854; bank $3f
ppud.upload_palette:= $F897                 ; bank $3f
do_sprite_dma_from_0200:= $F8AA             ; bank $3f
ppud.update_sprites_and_palette_after_nmi:= $F8B0; bank $3f
ppud.update_palette_after_nmi:= $F8BC       ; bank $3f
ppud.update_sprites_after_nmi:= $F8C5       ; bank $3f
ppud.sync_registers_with_cache:= $F8CB      ; bank $3f
ppud.set_vram_addr:= $F8E0                  ; bank $3f
mul8x8_reg  := $F8EA; bank $3f
offset$7e_16    := $F8F2; bank $3f
offset$80_16    := $F8FE; bank $3f
memcpy      := $F92F; bank $3f
copy_to_vram_with_encounter_mode:= $F942    ; bank $3f
copyToVramDirect:= $F969; bank $3f
copyToVram  := $F970; bank $3f
call_2e_9d53    := $FA0E; bank $3f
blackOutScreen  := $FA1D; bank $3f
doBattle    := $FA26; bank $3f
saveNmiIrqHandlerAndSetHandlerForBattle:= $FAB5 ; bank $3f
restoreIrqHandlerAndNmiHandler:= $FADD      ; bank $3f
saveFieldVars   := $FB17; bank $3f
irq_handler := $FB30; bank $3f
ppud.nmi_handler:= $FB57; bank $3f
ppud.await_nmi_completion:= $FB80           ; bank $3f
switch_16k_synchronized:= $FB87             ; bank $3f
switch_16k_synchronized_nocache:= $FB89     ; bank $3f
getPad1Input    := $FBAA; bank $3f
getBattleRandom := $FBEF; bank $3f
initBattleRandom:= $FC27; bank $3f
div         := $FC92; bank $3f
mul8x8      := $FCD6; bank $3f
mul16x16    := $FCF5; bank $3f
flagTargetBit   := $FD20; bank $3f
clearTargetBit  := $FD2C; bank $3f
maskTargetBit   := $FD38; bank $3f
shiftLeftN  := $FD3C; bank $3f
shiftRightN := $FD43; bank $3f
copyTo_$7ad7_x_Until0:= $FD4A               ; bank $3f
get2byteAtBank18:= $FD60; bank $3f
loadTo7400Ex    := $FDA6; bank $3f
copyTo7400  := $FDDC; bank $3f
call_bank30_9e58:= $FDF3; bank $3f
thunk.await_nmi_by_set_handler:= $FF00      ; bank $3f
thunk.switch_2banks:= $FF03                 ; bank $3f
thunk.switch_1st_bank:= $FF06               ; bank $3f
thunk.switch_2nd_bank:= $FF09               ; bank $3f
switch_1st_bank := $FF0C; bank $3f
switch_2banks   := $FF17; bank $3f
switch_2nd_bank := $FF1F; bank $3f
disable_handler_and_return_from_nmi:= $FF2A ; bank $3f
await_nmi_by_set_handler:= $FF36            ; bank $3f
hardware_vectors:= $FFF0; bank $3f
; ----------------------------------------------------------------------------
    sta <$18     ; 8043 85 18
    cmp #$C8    ; 8045 C9 C8
    bcs .L_8053   ; 8047 B0 0A
    cmp #$98    ; 8049 C9 98
    bcc .L_8058   ; 804B 90 0B
    lda #$00    ; 804D A9 00
    sta <$1C     ; 804F 85 1C
    beq .L_8067   ; 8051 F0 14
.L_8053:
  sec             ; 8053 38
    sbc #$30    ; 8054 E9 30
    sta <$18     ; 8056 85 18
.L_8058:
    txa             ; 8058 8A
    jsr setCurrentPlayerPtrs        ; 8059 20 6C 80
    lda #$00    ; 805C A9 00
    sta <$20     ; 805E 85 20
    lda #$94    ; 8060 A9 94
    sta <$21     ; 8062 85 21
    jsr isPlayerAllowedToUseItem    ; 8064 20 FD B8
.L_8067:
    dec <$1C     ; 8067 C6 1C
    lda <$1C     ; 8069 A5 1C
    rts             ; 806B 60
; ----------------------------------------------------------------------------
