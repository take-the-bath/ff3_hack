; da65 V2.11.0 - (C) Copyright 2000-2005,  Ullrich von Bassewitz
; Created:    2017-12-26 07:26:44
; Input file: D:\Documents\programming\eclipse workspaces\ff3\hack-and-patch\work\base-binary\ff3_plain.nes.noheader
; Page:       1


        .setcpu "65C02"

; ----------------------------------------------------------------------------
L8000           := $8000
L851B           := $851B
L852D           := $852D
LB9F6           := $B9F6
beginBattle     := $C049                        ; bank $3e
LC0ED           := $C0ED
field.enterDungeon:= $C1BB                      ; bank $3e
field.dispatchInput:= $C243                     ; bank $3e
field_OnStart   := $C269                        ; bank $3e
field_doScroll  := $C389                        ; bank $3e
field_setScroll := $C398                        ; bank $3e
field.init_sprites_cache:= $C486                ; bank $3e
LC49E           := $C49E
field.OnMove    := $C4FC                        ; bank $3e
field           := $C6B9                        ; bank $3e
field.OnCharacterMoved:= $C6D5                  ; bank $3e
field.getRandom := $C711                        ; bank $3e
floor.getObjectEventPtr:= $C72C                 ; bank $3e
field.call_sound_driver:= $C750                 ; bank $3e
field.call_sound_driver_and_restore_banks:= $C758; bank $3e
dive_into_float_land:= $C966                    ; bank $3e
switchToBank3C  := $C98A                        ; bank $3e
field.update_window_attr_buff:= $C98F           ; bank $3e
field.set_bg_attr_for_window:= $C9A9            ; bank $3e
field.merge_bg_attributes_with_buffer:= $CAB1   ; bank $3e
field.copyToVramWith_07d0:= $CB6B               ; bank $3e
field.loadWarpDestinationFloor:= $CBA4          ; bank $3e
loadFloorData   := $CBFA                        ; bank $3e
field.loadMapRow:= $CC47                        ; bank $3e
field.getMapDataPointers:= $CCBB                ; bank $3e
vehicleSpeeds   := $CD76                        ; bank $3e
getVehicleSpeed := $CD7E                        ; bank $3e
getTileParamsVertical:= $CE7A                   ; bank $3e
menu.call_recalc_character_params:= $D10B       ; bank $3e
field.load_label_text_into_buffer:= $D1B1       ; bank $3e
field.queue_SE_of_valid_action:= $D20D          ; bank $3e
field.queue_SE_of_move_of_cursor:= $D213        ; bank $3e
floor.getInputOrFireObjectEvent:= $D219         ; bank $3e
field.getAndMaskInput:= $D27A                   ; bank $3e
field.get_input := $D281                        ; bank $3e
field_maskInput := $D29A                        ; bank $3e
LD308           := $D308
field.clear_all_sprites:= $D336                 ; bank $3e
field.upload_palette:= $D381                    ; bank $3e
menu.queue_SE_of_invalid_action:= $D529         ; bank $3e
floor.load_object_sprite_into_buffer:= $DA3A    ; bank $3e
LDD06           := $DD06
loadPatternToVramEx:= $DE0F                     ; bank $3e
loadPatternToVram:= $DE1A                       ; bank $3e
loadSmallPatternToVram:= $DE2A                  ; bank $3e
floor.loadPatternForTiles:= $DE5A               ; bank $3e
loadTilePatternToVram:= $DEEA                   ; bank $3e
floor.loadObjectPatterns:= $DF08                ; bank $3e
floor.loadObjectPattern:= $DF41                 ; bank $3e
dungeon.mainLoop:= $E1DC                        ; bank $3f
floor.getInputAndHandleEvent:= $E2F8            ; bank $3f
floor.fireOnMove:= $E396                        ; bank $3f
floor.getEventSourceCoodinates:= $E4E9          ; bank $3f
floor.getChipEvent:= $E51C                      ; bank $3f
floor.event05   := $E69B                        ; bank $3f
floor.event07   := $E6BE                        ; bank $3f
dungeon.loadFloor:= $E7EC                       ; bank $3f
dungeon.loadFloorData:= $E803                   ; bank $3f
floor.processChipEvent:= $E917                  ; bank $3f
OnTreasure      := $E982                        ; bank $3f
floor.getObjectEvent:= $E9BB                    ; bank $3f
floor.loadEventScriptStream:= $EA04             ; bank $3f
floor.cache_event_script:= $EA1B                ; bank $3f
floor.getEvent  := $EA26                        ; bank $3f
switch_to_object_params_bank:= $EB23            ; bank $3f
switch_to_floor_logics_bank:= $EB28             ; bank $3f
field.scrolldown_item_window:= $EB2D            ; bank $3f
field.abort_item_window_scroll:= $EB3C          ; bank $3f
field.do_scrolldown_item_window:= $EB43         ; bank $3f
field.reflect_window_scroll:= $EB61             ; bank $3f
field.scrollup_item_window:= $EB69              ; bank $3f
field.seek_text_to_next_line:= $EBA9            ; bank $3f
field.unseek_text_to_line_beginning:= $EBD1     ; bank $3f
field.show_sprites_on_lower_half_screen:= $EC0C ; bank $3f
field.show_sprites_on_region7:= $EC12           ; bank $3f
field.hide_sprites_under_window:= $EC18         ; bank $3f
field.showhide_sprites_by_region:= $EC1A        ; bank $3f
u8              := $EC67                        ; bank $3f
field.show_message_UNKNOWN:= $EC83              ; bank $3f
field.show_message_window:= $EC8B               ; bank $3f
field.show_window:= $EC8D                       ; bank $3f
field.await_and_get_new_input:= $ECAB           ; bank $3f
field.get_next_input:= $ECBD                    ; bank $3f
field.get_next_input:= $ECC4                    ; bank $3f
field.advance_frame_with_sound:= $ECD8          ; bank $3f
field.draw_window_top:= $ECE5                   ; bank $3f
restore_banks_by_$57:= $ECF5                    ; bank $3f
field.draw_in_place_window:= $ECFA              ; bank $3f
field.draw_window_box:= $ED02                   ; bank $3f
field.init_window_attr_buffer:= $ED56           ; bank $3f
field.get_window_region:= $ED61                 ; bank $3f
field.draw_window_row:= $EDC6                   ; bank $3f
field.sync_ppu_scroll:= $EDE1                   ; bank $3f
field.getWindowTilesForTop:= $EDF6              ; bank $3f
field.getWindowTilesForMiddle:= $EE1D           ; bank $3f
field.getWindowTilesForBottom:= $EE3E           ; bank $3f
field.stream_string_in_window:= $EE65           ; bank $3f
field.load_and_draw_string:= $EE9A              ; bank $3f
field.draw_string_in_window:= $EEC0             ; bank $3f
textd.draw_in_box:= $EEFA                       ; bank $3f
textd.eval_replacement:= $F02A                  ; bank $3f
field.string.eval_code_10_13:= $F239            ; bank $3f
field.get_max_available_job_id:= $F38A          ; bank $3f
textd.setup_output_ptr_to_next_column:= $F3AC   ; bank $3f
textd.save_text_ptr:= $F3E4                     ; bank $3f
textd.restore_text_ptr:= $F3ED                  ; bank $3f
textd.trim_name_left:= $F3FA                    ; bank $3f
field.set_vram_addr_for_window:= $F40A          ; bank $3f
field.get_vram_addr_of_line_above:= $F435       ; bank $3f
menu.erase_message_area:= $F44B                 ; bank $3f
menu.erase_box_1e_x_14:= $F461                  ; bank $3f
menu.erase_box_1e_x_1c:= $F465                  ; bank $3f
menu.erase_box_of_width_1e:= $F467              ; bank $3f
menu.erase_box_from_bottom:= $F47A              ; bank $3f
floor.get_treasure:= $F549                      ; bank $3f
floor.get_treasure_item_id:= $F5C4              ; bank $3f
floor.get_item_price:= $F5D4                    ; bank $3f
increment_gil   := $F5FF                        ; bank $3f
invert_treasure_loot_flag:= $F640               ; bank $3f
field.calc_draw_width_and_init_window_tile_buffer:= $F670; bank $3f
field.init_window_tile_buffer:= $F683           ; bank $3f
field.draw_window_content:= $F692               ; bank $3f
field.upload_window_content:= $F6AA             ; bank $3f
switch_to_character_logics_bank:= $F727         ; bank $3f
call_doBattle   := $F800                        ; bank $3f
thunk.call_recalc_character_params:= $F803      ; bank $3f
field.call_recalc_character_params:= $F820      ; bank $3f
restoreFieldVariables:= $F83B                   ; bank $3f
call_32_8000    := $F854                        ; bank $3f
ppud.upload_palette:= $F897                     ; bank $3f
do_sprite_dma_from_0200:= $F8AA                 ; bank $3f
ppud.update_sprites_and_palette_after_nmi:= $F8B0; bank $3f
ppud.update_palette_after_nmi:= $F8BC           ; bank $3f
ppud.update_sprites_after_nmi:= $F8C5           ; bank $3f
ppud.sync_registers_with_cache:= $F8CB          ; bank $3f
ppud.set_vram_addr:= $F8E0                      ; bank $3f
mul8x8_reg      := $F8EA                        ; bank $3f
offset$7e_16    := $F8F2                        ; bank $3f
offset$80_16    := $F8FE                        ; bank $3f
memcpy          := $F92F                        ; bank $3f
copy_to_vram_with_encounter_mode:= $F942        ; bank $3f
copyToVramDirect:= $F969                        ; bank $3f
copyToVram      := $F970                        ; bank $3f
call_2e_9d53    := $FA0E                        ; bank $3f
blackOutScreen  := $FA1D                        ; bank $3f
doBattle        := $FA26                        ; bank $3f
saveNmiIrqHandlerAndSetHandlerForBattle:= $FAB5 ; bank $3f
restoreIrqHandlerAndNmiHandler:= $FADD          ; bank $3f
saveFieldVars   := $FB17                        ; bank $3f
irq_handler     := $FB30                        ; bank $3f
ppud.nmi_handler:= $FB57                        ; bank $3f
ppud.await_nmi_completion:= $FB80               ; bank $3f
switch_16k_synchronized:= $FB87                 ; bank $3f
switch_16k_synchronized_nocache:= $FB89         ; bank $3f
getPad1Input    := $FBAA                        ; bank $3f
getBattleRandom := $FBEF                        ; bank $3f
initBattleRandom:= $FC27                        ; bank $3f
div             := $FC92                        ; bank $3f
mul8x8          := $FCD6                        ; bank $3f
mul16x16        := $FCF5                        ; bank $3f
flagTargetBit   := $FD20                        ; bank $3f
clearTargetBit  := $FD2C                        ; bank $3f
maskTargetBit   := $FD38                        ; bank $3f
shiftLeftN      := $FD3C                        ; bank $3f
shiftRightN     := $FD43                        ; bank $3f
copyTo_$7ad7_x_Until0:= $FD4A                   ; bank $3f
get2byteAtBank18:= $FD60                        ; bank $3f
loadTo7400Ex    := $FDA6                        ; bank $3f
copyTo7400      := $FDDC                        ; bank $3f
call_bank30_9e58:= $FDF3                        ; bank $3f
thunk_await_nmi_by_set_handler:= $FF00          ; bank $3f
call_switchFirst2Banks:= $FF03                  ; bank $3f
call_switch1stBank:= $FF06                      ; bank $3f
call_switch2ndBank:= $FF09                      ; bank $3f
switch_1st_page := $FF0C                        ; bank $3f
switch_2pages   := $FF17                        ; bank $3f
switch_2nd_page := $FF1F                        ; bank $3f
nmi_handler_01  := $FF2A                        ; bank $3f
setNmiHandlerTo_ff2a_andWaitNmi:= $FF36         ; bank $3f
hardware_vectors:= $FFF0                        ; bank $3f
; ----------------------------------------------------------------------------
; bank $3e
menu.opening.title_page:
        lda     #$36                            ; C06E A9 36
        jsr     call_switchFirst2Banks          ; C070 20 03 FF
        lda     #$00                            ; C073 A9 00
        sta     $7F49                           ; C075 8D 49 7F
        jsr     L8000                           ; C078 20 00 80
        lda     #$00                            ; C07B A9 00
        sta     $2001                           ; C07D 8D 01 20
        sta     $FE                             ; C080 85 FE
        lda     #$88                            ; C082 A9 88
        sta     $FF                             ; C084 85 FF
        sta     $FD                             ; C086 85 FD
        sta     $2000                           ; C088 8D 00 20
        ldx     #$FF                            ; C08B A2 FF
        txs                                     ; C08D 9A
        lda     #$00                            ; C08E A9 00
        jsr     LC49E                           ; C090 20 9E C4
        jsr     field.init_sprites_cache        ; C093 20 86 C4
        jsr     thunk_await_nmi_by_set_handler  ; C096 20 00 FF
        lda     #$02                            ; C099 A9 02
        sta     $4014                           ; C09B 8D 14 40
        jsr     LD308                           ; C09E 20 08 D3
        lda     $FA                             ; C0A1 A5 FA
        cmp     #$77                            ; C0A3 C9 77
        beq     LC0C3                           ; C0A5 F0 1C
        lda     #$3A                            ; C0A7 A9 3A
        jsr     call_switch1stBank              ; C0A9 20 06 FF
        jsr     L851B                           ; C0AC 20 1B 85
        lda     #$00                            ; C0AF A9 00
        sta     $2001                           ; C0B1 8D 01 20
        lda     #$77                            ; C0B4 A9 77
        sta     $FA                             ; C0B6 85 FA
        jsr     LDD06                           ; C0B8 20 06 DD
        lda     #$3A                            ; C0BB A9 3A
        jsr     call_switch1stBank              ; C0BD 20 06 FF
        jsr     L852D                           ; C0C0 20 2D 85
LC0C3:  jsr     switchToBank3C                  ; C0C3 20 8A C9
        jsr     LB9F6                           ; C0C6 20 F6 B9
        php                                     ; C0C9 08
        jsr     LC49E                           ; C0CA 20 9E C4
        lda     $6009                           ; C0CD AD 09 60
        sta     $27                             ; C0D0 85 27
        lda     $600A                           ; C0D2 AD 0A 60
        sta     $28                             ; C0D5 85 28
        lda     $600F                           ; C0D7 AD 0F 60
        sta     $46                             ; C0DA 85 46
        sta     $42                             ; C0DC 85 42
        lda     $6008                           ; C0DE AD 08 60
        sta     $78                             ; C0E1 85 78
        plp                                     ; C0E3 28
        bcs     LC0ED                           ; C0E4 B0 07
        lda     #$00                            ; C0E6 A9 00
        sta     $48                             ; C0E8 85 48
        jsr     dungeon.mainLoop                ; C0EA 20 DC E1
