; da65 V2.11.0 - (C) Copyright 2000-2005,  Ullrich von Bassewitz
; Created:    2017-12-22 01:26:41
; Input file: D:\Documents\programming\eclipse workspaces\ff3\hack-and-patch\work\base-binary\ff3_plain.nes.noheader
; Page:   1


    .setcpu "65C02"

; ----------------------------------------------------------------------------
.L_8998       := $8998
.L_8B78       := $8B78
beginBattle := $C049; bank $3e
menu.opening.title_page:= $C06E             ; bank $3e
field.enterDungeon:= $C1BB                  ; bank $3e
field.dispatchInput:= $C243                 ; bank $3e
field_OnStart   := $C269; bank $3e
field_doScroll  := $C389; bank $3e
field_setScroll := $C398; bank $3e
field.OnMove    := $C4FC; bank $3e
field       := $C6B9; bank $3e
field.OnCharacterMoved:= $C6D5              ; bank $3e
field.getRandom := $C711; bank $3e
floor.getObjectEventPtr:= $C72C             ; bank $3e
field.callSoundDriver:= $C750               ; bank $3e
dive_into_float_land:= $C966                ; bank $3e
switchToBank3C  := $C98A; bank $3e
field.update_window_attr_buff:= $C98F       ; bank $3e
field.set_bg_attr_for_window:= $C9A9        ; bank $3e
field.merge_bg_attributes_with_buffer:= $CAB1   ; bank $3e
field.copyToVramWith_07d0:= $CB6B           ; bank $3e
field.loadWarpDestinationFloor:= $CBA4      ; bank $3e
loadFloorData   := $CBFA; bank $3e
field.loadMapRow:= $CC47; bank $3e
field.getMapDataPointers:= $CCBB            ; bank $3e
vehicleSpeeds   := $CD76; bank $3e
getVehicleSpeed := $CD7E; bank $3e
getTileParamsVertical:= $CE7A               ; bank $3e
field.load_label_text_into_buffer:= $D1B1   ; bank $3e
floor.getInputOrFireObjectEvent:= $D219     ; bank $3e
field.getAndMaskInput:= $D27A               ; bank $3e
field.get_input := $D281; bank $3e
field_maskInput := $D29A; bank $3e
field.upload_palette:= $D381                ; bank $3e
floor.load_object_sprite_into_buffer:= $DA3A    ; bank $3e
loadPatternToVramEx:= $DE0F                 ; bank $3e
loadPatternToVram:= $DE1A                   ; bank $3e
loadSmallPatternToVram:= $DE2A              ; bank $3e
floor.loadPatternForTiles:= $DE5A           ; bank $3e
loadTilePatternToVram:= $DEEA               ; bank $3e
floor.loadObjectPatterns:= $DF08            ; bank $3e
floor.loadObjectPattern:= $DF41             ; bank $3e
dungeon.mainLoop:= $E1DC; bank $3f
floor.getInputAndHandleEvent:= $E2F8        ; bank $3f
floor.fireOnMove:= $E396; bank $3f
floor.getEventSourceCoodinates:= $E4E9      ; bank $3f
floor.getChipEvent:= $E51C                  ; bank $3f
floor.event05   := $E69B; bank $3f
floor.event07   := $E6BE; bank $3f
dungeon.loadFloor:= $E7EC                   ; bank $3f
dungeon.loadFloorData:= $E803               ; bank $3f
floor.processChipEvent:= $E917              ; bank $3f
OnTreasure  := $E982; bank $3f
floor.getObjectEvent:= $E9BB                ; bank $3f
floor.loadEventScriptStream:= $EA04         ; bank $3f
floor.cache_event_script:= $EA1B            ; bank $3f
floor.getEvent  := $EA26; bank $3f
switch_to_object_params_bank:= $EB23        ; bank $3f
switch_to_floor_logics_bank:= $EB28         ; bank $3f
field.scrolldown_item_window:= $EB2D        ; bank $3f
field.abort_item_window_scroll:= $EB3C      ; bank $3f
field.do_scrolldown_item_window:= $EB43     ; bank $3f
field.reflect_window_scroll:= $EB61         ; bank $3f
field.scrollup_item_window:= $EB69          ; bank $3f
field.seek_text_to_next_line:= $EBA9        ; bank $3f
field.unseek_text_to_line_beginning:= $EBD1 ; bank $3f
field.show_sprites_on_lower_half_screen:= $EC0C ; bank $3f
field.show_sprites_on_region7:= $EC12       ; bank $3f
field.hide_sprites_under_window:= $EC18     ; bank $3f
field.showhide_sprites_by_region:= $EC1A    ; bank $3f
u8          := $EC67; bank $3f
field.show_message_UNKNOWN:= $EC83          ; bank $3f
field.show_message_window:= $EC8B           ; bank $3f
field.show_window:= $EC8D                   ; bank $3f
field.await_and_get_new_input:= $ECAB       ; bank $3f
field.get_next_input:= $ECBD                ; bank $3f
field.get_next_input:= $ECC4                ; bank $3f
field.advance_frame_with_sound:= $ECD8      ; bank $3f
field.draw_window_top:= $ECE5               ; bank $3f
restore_banks_by_$57:= $ECF5                ; bank $3f
field.draw_in_place_window:= $ECFA          ; bank $3f
field.draw_window_box:= $ED02               ; bank $3f
field.init_window_attr_buffer:= $ED56       ; bank $3f
field.get_window_region:= $ED61             ; bank $3f
field.draw_window_row:= $EDC6               ; bank $3f
field.sync_ppu_scroll:= $EDE1               ; bank $3f
field.getWindowTilesForTop:= $EDF6          ; bank $3f
field.getWindowTilesForMiddle:= $EE1D       ; bank $3f
field.getWindowTilesForBottom:= $EE3E       ; bank $3f
field.stream_string_in_window:= $EE65       ; bank $3f
field.load_and_draw_string:= $EE9A          ; bank $3f
field.draw_string_in_window:= $EEC0         ; bank $3f
textd.draw_in_box:= $EEFA                   ; bank $3f
textd.eval_replacement:= $F02A              ; bank $3f
.L_F09D       := $F09D
.L_F0A1       := $F0A1
.L_F0C5       := $F0C5
field.get_max_available_job_id:= $F38A      ; bank $3f
textd.setup_output_ptr_to_next_column:= $F3AC   ; bank $3f
textd.save_text_ptr:= $F3E4                 ; bank $3f
textd.restore_text_ptr:= $F3ED              ; bank $3f
textd.trim_name_left:= $F3FA                ; bank $3f
field.set_vram_addr_for_window:= $F40A      ; bank $3f
field.get_vram_addr_of_line_above:= $F435   ; bank $3f
menu.savefile.erase_windows:= $F44B         ; bank $3f
menu.erase_box_1e_x_14:= $F461              ; bank $3f
menu.erase_box_1e_x_1c:= $F465              ; bank $3f
menu.erase_box_of_width_1e:= $F467          ; bank $3f
menu.erase_box_from_bottom:= $F47A          ; bank $3f
floor.get_treasure:= $F549                  ; bank $3f
floor.get_treasure_item_id:= $F5C4          ; bank $3f
floor.get_item_price:= $F5D4                ; bank $3f
increment_gil   := $F5FF; bank $3f
invert_treasure_loot_flag:= $F640           ; bank $3f
field.calc_draw_width_and_init_window_tile_buffer:= $F670; bank $3f
field.init_window_tile_buffer:= $F683       ; bank $3f
field.draw_window_content:= $F692           ; bank $3f
field.upload_window_content:= $F6AA         ; bank $3f
switch_to_character_logics_bank:= $F727     ; bank $3f
call_doBattle   := $F800; bank $3f
restoreFieldVariables:= $F83B               ; bank $3f
call_32_8000    := $F854; bank $3f
ppud.upload_palette:= $F897                 ; bank $3f
do_sprite_dma_from_0200:= $F8AA             ; bank $3f
ppud.update_sprites_and_palette_after_nmi:= $F8B0; bank $3f
ppud.update_palette_after_nmi:= $F8BC       ; bank $3f
ppud.update_sprites_after_nmi:= $F8C5       ; bank $3f
ppud.sync_registers_with_cache:= $F8CB      ; bank $3f
ppud.set_vram_addr:= $F8E0                  ; bank $3f
mul8x8_reg  := $F8EA; bank $3f
offset$7e_16    := $F8F2; bank $3f
offset$80_16    := $F8FE; bank $3f
memcpy      := $F92F; bank $3f
copy_to_vram_with_encounter_mode:= $F942    ; bank $3f
copyToVramDirect:= $F969; bank $3f
copyToVram  := $F970; bank $3f
call_2e_9d53    := $FA0E; bank $3f
blackOutScreen  := $FA1D; bank $3f
doBattle    := $FA26; bank $3f
saveNmiIrqHandlerAndSetHandlerForBattle:= $FAB5 ; bank $3f
restoreIrqHandlerAndNmiHandler:= $FADD      ; bank $3f
saveFieldVars   := $FB17; bank $3f
irq_handler := $FB30; bank $3f
ppud.nmi_handler:= $FB57; bank $3f
ppud.await_nmi_completion:= $FB80           ; bank $3f
switch_16k_synchronized:= $FB87             ; bank $3f
switch_16k_synchronized_nocache:= $FB89     ; bank $3f
getPad1Input    := $FBAA; bank $3f
getBattleRandom := $FBEF; bank $3f
initBattleRandom:= $FC27; bank $3f
div         := $FC92; bank $3f
mul8x8      := $FCD6; bank $3f
mul16x16    := $FCF5; bank $3f
flagTargetBit   := $FD20; bank $3f
clearTargetBit  := $FD2C; bank $3f
maskTargetBit   := $FD38; bank $3f
shiftLeftN  := $FD3C; bank $3f
shiftRightN := $FD43; bank $3f
copyTo_$7ad7_x_Until0:= $FD4A               ; bank $3f
get2byteAtBank18:= $FD60; bank $3f
loadTo7400Ex    := $FDA6; bank $3f
copyTo7400  := $FDDC; bank $3f
call_bank30_9e58:= $FDF3; bank $3f
thunk_await_nmi_by_set_handler:= $FF00      ; bank $3f
call_switchFirst2Banks:= $FF03              ; bank $3f
call_switch1stBank:= $FF06                  ; bank $3f
call_switch2ndBank:= $FF09                  ; bank $3f
switch_1st_page := $FF0C; bank $3f
switch_2pages   := $FF17; bank $3f
switch_2nd_page := $FF1F; bank $3f
nmi_handler_01  := $FF2A; bank $3f
setNmiHandlerTo_ff2a_andWaitNmi:= $FF36     ; bank $3f
hardware_vectors:= $FFF0; bank $3f
; ----------------------------------------------------------------------------
; bank $3f
field.string.eval_code_10_13:
    lsr a       ; F239 4A
    ror a       ; F23A 6A
    ror a       ; F23B 6A
    and #$C0    ; F23C 29 C0
    sta <$67     ; F23E 85 67
    lda <$84     ; F240 A5 84
    cmp #$30    ; F242 C9 30
    bcc .L_F299   ; F244 90 53
.L_F246:
  cmp #$FF    ; F246 C9 FF
    bne .L_F289   ; F248 D0 3F
    ldx <$67     ; F24A A6 67
    lda $6101,x ; F24C BD 01 61
    cmp #$62    ; F24F C9 62
    bcs .L_F291   ; F251 B0 3E
    sta <$80     ; F253 85 80
    asl a       ; F255 0A
    clc             ; F256 18
    adc <$80     ; F257 65 80
    sta <$84     ; F259 85 84
    lda #$00    ; F25B A9 00
    adc #$80    ; F25D 69 80
    sta <$85     ; F25F 85 85
    lda #$39    ; F261 A9 39
    jsr call_switch1stBank          ; F263 20 06 FF
    ldy #$B0    ; F266 A0 B0
    lda [$84],y ; F268 B1 84
    sec             ; F26A 38
    sbc $6103,x ; F26B FD 03 61
    sta <$80     ; F26E 85 80
    iny             ; F270 C8
    lda [$84],y ; F271 B1 84
    sbc $6104,x ; F273 FD 04 61
    sta <$81     ; F276 85 81
    iny             ; F278 C8
    lda [$84],y ; F279 B1 84
    sbc $6105,x ; F27B FD 05 61
    sta <$82     ; F27E 85 82
    jsr switch_to_character_logics_bank ; F280 20 27 F7
    jsr .L_8B78   ; F283 20 78 8B
    jmp .L_F291   ; F286 4C 91 F2
; ----------------------------------------------------------------------------
.L_F289:
  pha             ; F289 48
    jsr switch_to_character_logics_bank ; F28A 20 27 F7
    pla             ; F28D 68
    jsr .L_8998   ; F28E 20 98 89
.L_F291:
  lda <$93     ; F291 A5 93
    jsr call_switchFirst2Banks      ; F293 20 03 FF
    jmp textd.draw_in_box           ; F296 4C FA EE
; ----------------------------------------------------------------------------
.L_F299:
  cmp #$00    ; F299 C9 00
    bne .L_F301   ; F29B D0 64
    ldx <$67     ; F29D A6 67
    lda $6102,x ; F29F BD 02 61
    and #$FE    ; F2A2 29 FE
    bne .L_F2BB   ; F2A4 D0 15
    ldx <$90     ; F2A6 A6 90
    inc <$90     ; F2A8 E6 90
    inc <$90     ; F2AA E6 90
    lda #$5E    ; F2AC A9 5E
    sta $07A0,x ; F2AE 9D A0 07
    lda #$5F    ; F2B1 A9 5F
    sta $07A1,x ; F2B3 9D A1 07
    lda #$3E    ; F2B6 A9 3E
    jmp .L_F246   ; F2B8 4C 46 F2
; ----------------------------------------------------------------------------
.L_F2BB:
  ldy #$16    ; F2BB A0 16
    asl a       ; F2BD 0A
    bcs .L_F2D7   ; F2BE B0 17
    ldy #$17    ; F2C0 A0 17
    asl a       ; F2C2 0A
    bcs .L_F2D7   ; F2C3 B0 12
    ldy #$1B    ; F2C5 A0 1B
    asl a       ; F2C7 0A
    bcs .L_F2D7   ; F2C8 B0 0D
    iny             ; F2CA C8
    asl a       ; F2CB 0A
    bcs .L_F2D7   ; F2CC B0 09
    iny             ; F2CE C8
    asl a       ; F2CF 0A
    bcs .L_F2D7   ; F2D0 B0 05
    iny             ; F2D2 C8
    asl a       ; F2D3 0A
    bcs .L_F2D7   ; F2D4 B0 01
    iny             ; F2D6 C8
.L_F2D7:
  tya             ; F2D7 98
.L_F2D8:
  tax             ; F2D8 AA
    jsr textd.save_text_ptr         ; F2D9 20 E4 F3
    lda #$18    ; F2DC A9 18
    jsr call_switchFirst2Banks      ; F2DE 20 03 FF
    txa             ; F2E1 8A
    asl a       ; F2E2 0A
    tax             ; F2E3 AA
    bcs .L_F2F1   ; F2E4 B0 0B
    lda $8200,x ; F2E6 BD 00 82
    sta <$3E     ; F2E9 85 3E
    lda $8201,x ; F2EB BD 01 82
    jmp .L_F2F9   ; F2EE 4C F9 F2
; ----------------------------------------------------------------------------
.L_F2F1:
  lda $8300,x ; F2F1 BD 00 83
    sta <$3E     ; F2F4 85 3E
    lda $8301,x ; F2F6 BD 01 83
.L_F2F9:
  tax             ; F2F9 AA
    lda <$90     ; F2FA A5 90
    pha             ; F2FC 48
    txa             ; F2FD 8A
    jmp .L_F0C5   ; F2FE 4C C5 F0
; ----------------------------------------------------------------------------
.L_F301:
  cmp #$01    ; F301 C9 01
    bne .L_F310   ; F303 D0 0B
    ldx <$67     ; F305 A6 67
    lda $6100,x ; F307 BD 00 61
    clc             ; F30A 18
    adc #$E2    ; F30B 69 E2
    jmp .L_F2D8   ; F30D 4C D8 F2
; ----------------------------------------------------------------------------
.L_F310:
  cmp #$02    ; F310 C9 02
    bne .L_F348   ; F312 D0 34
    ldx <$67     ; F314 A6 67
    lda $6106,x ; F316 BD 06 61
    sta <$5A     ; F319 85 5A
    lda $6107,x ; F31B BD 07 61
    sta <$5B     ; F31E 85 5B
    lda $6108,x ; F320 BD 08 61
    sta <$5C     ; F323 85 5C
    lda $6109,x ; F325 BD 09 61
    sta <$5D     ; F328 85 5D
    lda $610A,x ; F32A BD 0A 61
    sta <$5E     ; F32D 85 5E
    lda $610B,x ; F32F BD 0B 61
    sta <$5F     ; F332 85 5F
    jsr textd.save_text_ptr         ; F334 20 E4 F3
    lda #$5A    ; F337 A9 5A
    sta <$3E     ; F339 85 3E
    lda #$00    ; F33B A9 00
    sta <$3F     ; F33D 85 3F
    jsr textd.draw_in_box           ; F33F 20 FA EE
    jsr textd.restore_text_ptr      ; F342 20 ED F3
    jmp textd.draw_in_box           ; F345 4C FA EE
; ----------------------------------------------------------------------------
.L_F348:
  cmp #$08    ; F348 C9 08
    bcs .L_F373   ; F34A B0 27
    sec             ; F34C 38
    sbc #$03    ; F34D E9 03
    cmp #$04    ; F34F C9 04
    bne .L_F356   ; F351 D0 03
    clc             ; F353 18
    adc #$01    ; F354 69 01
.L_F356:
  ora <$67     ; F356 05 67
    tax             ; F358 AA
    lda $6200,x ; F359 BD 00 62
    bne .L_F368   ; F35C D0 0A
    txa             ; F35E 8A
    and #$07    ; F35F 29 07
    tax             ; F361 AA
    lda .L_F36D,x ; F362 BD 6D F3
    jmp .L_F2D8   ; F365 4C D8 F2
; ----------------------------------------------------------------------------
.L_F368:
  sta <$84     ; F368 85 84
    jmp .L_F0A1   ; F36A 4C A1 F0
; ----------------------------------------------------------------------------
.L_F36D:
  cmp $DFDE,x ; F36D DD DE DF
    cpx #$E1    ; F370 E0 E1
    .byte   <$E1     ; F372 E1
.L_F373:
  sec             ; F373 38
    sbc #$08    ; F374 E9 08
    tax             ; F376 AA
    lda $7C00,x ; F377 BD 00 7C
    beq .L_F387   ; F37A F0 0B
    sta <$84     ; F37C 85 84
    tax             ; F37E AA
    lda $7200,x ; F37F BD 00 72
    sta <$B9     ; F382 85 B9
    jmp .L_F09D   ; F384 4C 9D F0
; ----------------------------------------------------------------------------
.L_F387:
  jmp textd.draw_in_box           ; F387 4C FA EE
; ----------------------------------------------------------------------------
