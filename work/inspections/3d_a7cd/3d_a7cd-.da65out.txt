; da65 V2.11.0 - (C) Copyright 2000-2005,  Ullrich von Bassewitz
; Created:    2017-12-23 03:58:31
; Input file: D:\Documents\programming\eclipse workspaces\ff3\hack-and-patch\work\base-binary\ff3_plain.nes.noheader
; Page:   1


    .setcpu "65C02"

; ----------------------------------------------------------------------------
.L_8129       := $8129
.L_8F74       := $8F74
menu.items.init_states:= $903D              ; bank $3c
.L_9119       := $9119
.L_912A       := $912A
.L_914C       := $914C
fieldMenu.updateCursorPos:= $91A3           ; bank $3c
floor.copyEventScriptStream:= $92F3         ; bank $3c
getEventFlag    := $9344; bank $3c
floor.searchSpaceForItem:= $937E            ; bank $3c
menu.upload_default_bg_attrs:= $956F        ; bank $3c
menu.init_cursor_pos:= $9592                ; bank $3c
menu.init_ppu   := $959F; bank $3c
jobMenu.main    := $962F; bank $3c
menu.items.main_loop:= $9EC2                ; bank $3c
checkmagic  := $A2DF; bank $3d
menu.pc_select.draw_window:= $A328          ; bank $3d
menu.pc_select.load_states:= $A38E          ; bank $3d
menu.pc_select.save_states:= $A3A8          ; bank $3d
menu.main_loop  := $A52F; bank $3d
menu.draw_window:= $A666; bank $3d
menu.stream_window_content:= $A66B          ; bank $3d
menu.draw_window_content:= $A678            ; bank $3d
menu.main.erase := $A685; bank $3d
fieldMenu.selectCharacter:= $A6B4           ; bank $3d
field.loadAndDrawString:= $A87A             ; bank $3d
saveMenu.close  := $A88C; bank $3d
fieldMenu.OnSaveSelected:= $A897            ; bank $3d
menu.savefile.draw_file_summary:= $A9E1     ; bank $3d
menu.savefile.load_game_at:= $A9F9          ; bank $3d
menu.savefile.load_game:= $AA06             ; bank $3d
menu.savefile.save_or_load_current_game_with_buffer:= $AA18; bank $3d
menu.get_window_metrics:= $AABC             ; bank $3d
menu.draw_window_box:= $AAF1                ; bank $3d
field.menu_window_metrics:= $AAF7           ; bank $3d
jobMenu.getCosts:= $AD85; bank $3d
getJobParameter := $ADF2; bank $3d
floor.shop  := $B0EB; bank $3d
floor.shop.getItemValues:= $B220            ; bank $3d
floor.shop.getSellingPrice:= $B248          ; bank $3d
floor.shop.getItemValue:= $B270             ; bank $3d
menu.stomach.build_content_text:= $B570     ; bank $3d
getEncounterId  := $BD4D; bank $3d
isEncounterOccured:= $BDB9                  ; bank $3d
beginBattle := $C049; bank $3e
menu.opening.title_page:= $C06E             ; bank $3e
field.enterDungeon:= $C1BB                  ; bank $3e
field.dispatchInput:= $C243                 ; bank $3e
field_OnStart   := $C269; bank $3e
field_doScroll  := $C389; bank $3e
field_setScroll := $C398; bank $3e
field.init_sprites_cache:= $C486            ; bank $3e
field.OnMove    := $C4FC; bank $3e
field       := $C6B9; bank $3e
field.OnCharacterMoved:= $C6D5              ; bank $3e
field.getRandom := $C711; bank $3e
floor.getObjectEventPtr:= $C72C             ; bank $3e
field.callSoundDriver:= $C750               ; bank $3e
.L_C758       := $C758
dive_into_float_land:= $C966                ; bank $3e
switchToBank3C  := $C98A; bank $3e
field.update_window_attr_buff:= $C98F       ; bank $3e
field.set_bg_attr_for_window:= $C9A9        ; bank $3e
field.merge_bg_attributes_with_buffer:= $CAB1   ; bank $3e
field.copyToVramWith_07d0:= $CB6B           ; bank $3e
field.loadWarpDestinationFloor:= $CBA4      ; bank $3e
loadFloorData   := $CBFA; bank $3e
field.loadMapRow:= $CC47; bank $3e
field.getMapDataPointers:= $CCBB            ; bank $3e
vehicleSpeeds   := $CD76; bank $3e
getVehicleSpeed := $CD7E; bank $3e
getTileParamsVertical:= $CE7A               ; bank $3e
field.load_label_text_into_buffer:= $D1B1   ; bank $3e
floor.getInputOrFireObjectEvent:= $D219     ; bank $3e
field.getAndMaskInput:= $D27A               ; bank $3e
field.get_input := $D281; bank $3e
field_maskInput := $D29A; bank $3e
field.clear_all_sprites:= $D336             ; bank $3e
field.upload_palette:= $D381                ; bank $3e
floor.load_object_sprite_into_buffer:= $DA3A    ; bank $3e
loadPatternToVramEx:= $DE0F                 ; bank $3e
loadPatternToVram:= $DE1A                   ; bank $3e
loadSmallPatternToVram:= $DE2A              ; bank $3e
floor.loadPatternForTiles:= $DE5A           ; bank $3e
loadTilePatternToVram:= $DEEA               ; bank $3e
floor.loadObjectPatterns:= $DF08            ; bank $3e
floor.loadObjectPattern:= $DF41             ; bank $3e
dungeon.mainLoop:= $E1DC; bank $3f
floor.getInputAndHandleEvent:= $E2F8        ; bank $3f
floor.fireOnMove:= $E396; bank $3f
floor.getEventSourceCoodinates:= $E4E9      ; bank $3f
floor.getChipEvent:= $E51C                  ; bank $3f
floor.event05   := $E69B; bank $3f
floor.event07   := $E6BE; bank $3f
dungeon.loadFloor:= $E7EC                   ; bank $3f
dungeon.loadFloorData:= $E803               ; bank $3f
floor.processChipEvent:= $E917              ; bank $3f
OnTreasure  := $E982; bank $3f
floor.getObjectEvent:= $E9BB                ; bank $3f
floor.loadEventScriptStream:= $EA04         ; bank $3f
floor.cache_event_script:= $EA1B            ; bank $3f
floor.getEvent  := $EA26; bank $3f
switch_to_object_params_bank:= $EB23        ; bank $3f
switch_to_floor_logics_bank:= $EB28         ; bank $3f
field.scrolldown_item_window:= $EB2D        ; bank $3f
field.abort_item_window_scroll:= $EB3C      ; bank $3f
field.do_scrolldown_item_window:= $EB43     ; bank $3f
field.reflect_window_scroll:= $EB61         ; bank $3f
field.scrollup_item_window:= $EB69          ; bank $3f
field.seek_text_to_next_line:= $EBA9        ; bank $3f
field.unseek_text_to_line_beginning:= $EBD1 ; bank $3f
field.show_sprites_on_lower_half_screen:= $EC0C ; bank $3f
field.show_sprites_on_region7:= $EC12       ; bank $3f
field.hide_sprites_under_window:= $EC18     ; bank $3f
field.showhide_sprites_by_region:= $EC1A    ; bank $3f
u8          := $EC67; bank $3f
field.show_message_UNKNOWN:= $EC83          ; bank $3f
field.show_message_window:= $EC8B           ; bank $3f
field.show_window:= $EC8D                   ; bank $3f
field.await_and_get_new_input:= $ECAB       ; bank $3f
field.get_next_input:= $ECBD                ; bank $3f
field.get_next_input:= $ECC4                ; bank $3f
field.advance_frame_with_sound:= $ECD8      ; bank $3f
field.draw_window_top:= $ECE5               ; bank $3f
restore_banks_by_$57:= $ECF5                ; bank $3f
field.draw_in_place_window:= $ECFA          ; bank $3f
field.draw_window_box:= $ED02               ; bank $3f
field.init_window_attr_buffer:= $ED56       ; bank $3f
field.get_window_region:= $ED61             ; bank $3f
field.draw_window_row:= $EDC6               ; bank $3f
field.sync_ppu_scroll:= $EDE1               ; bank $3f
field.getWindowTilesForTop:= $EDF6          ; bank $3f
field.getWindowTilesForMiddle:= $EE1D       ; bank $3f
field.getWindowTilesForBottom:= $EE3E       ; bank $3f
field.stream_string_in_window:= $EE65       ; bank $3f
field.load_and_draw_string:= $EE9A          ; bank $3f
field.draw_string_in_window:= $EEC0         ; bank $3f
textd.draw_in_box:= $EEFA                   ; bank $3f
textd.eval_replacement:= $F02A              ; bank $3f
field.string.eval_code_10_13:= $F239        ; bank $3f
field.get_max_available_job_id:= $F38A      ; bank $3f
textd.setup_output_ptr_to_next_column:= $F3AC   ; bank $3f
textd.save_text_ptr:= $F3E4                 ; bank $3f
textd.restore_text_ptr:= $F3ED              ; bank $3f
textd.trim_name_left:= $F3FA                ; bank $3f
field.set_vram_addr_for_window:= $F40A      ; bank $3f
field.get_vram_addr_of_line_above:= $F435   ; bank $3f
menu.savefile.erase_windows:= $F44B         ; bank $3f
menu.erase_box_1e_x_14:= $F461              ; bank $3f
menu.erase_box_1e_x_1c:= $F465              ; bank $3f
menu.erase_box_of_width_1e:= $F467          ; bank $3f
menu.erase_box_from_bottom:= $F47A          ; bank $3f
floor.get_treasure:= $F549                  ; bank $3f
floor.get_treasure_item_id:= $F5C4          ; bank $3f
floor.get_item_price:= $F5D4                ; bank $3f
increment_gil   := $F5FF; bank $3f
invert_treasure_loot_flag:= $F640           ; bank $3f
field.calc_draw_width_and_init_window_tile_buffer:= $F670; bank $3f
field.init_window_tile_buffer:= $F683       ; bank $3f
field.draw_window_content:= $F692           ; bank $3f
field.upload_window_content:= $F6AA         ; bank $3f
switch_to_character_logics_bank:= $F727     ; bank $3f
call_doBattle   := $F800; bank $3f
restoreFieldVariables:= $F83B               ; bank $3f
call_32_8000    := $F854; bank $3f
ppud.upload_palette:= $F897                 ; bank $3f
do_sprite_dma_from_0200:= $F8AA             ; bank $3f
ppud.update_sprites_and_palette_after_nmi:= $F8B0; bank $3f
ppud.update_palette_after_nmi:= $F8BC       ; bank $3f
ppud.update_sprites_after_nmi:= $F8C5       ; bank $3f
ppud.sync_registers_with_cache:= $F8CB      ; bank $3f
ppud.set_vram_addr:= $F8E0                  ; bank $3f
mul8x8_reg  := $F8EA; bank $3f
offset$7e_16    := $F8F2; bank $3f
offset$80_16    := $F8FE; bank $3f
memcpy      := $F92F; bank $3f
copy_to_vram_with_encounter_mode:= $F942    ; bank $3f
copyToVramDirect:= $F969; bank $3f
copyToVram  := $F970; bank $3f
call_2e_9d53    := $FA0E; bank $3f
blackOutScreen  := $FA1D; bank $3f
doBattle    := $FA26; bank $3f
saveNmiIrqHandlerAndSetHandlerForBattle:= $FAB5 ; bank $3f
restoreIrqHandlerAndNmiHandler:= $FADD      ; bank $3f
saveFieldVars   := $FB17; bank $3f
irq_handler := $FB30; bank $3f
ppud.nmi_handler:= $FB57; bank $3f
ppud.await_nmi_completion:= $FB80           ; bank $3f
switch_16k_synchronized:= $FB87             ; bank $3f
switch_16k_synchronized_nocache:= $FB89     ; bank $3f
getPad1Input    := $FBAA; bank $3f
getBattleRandom := $FBEF; bank $3f
initBattleRandom:= $FC27; bank $3f
div         := $FC92; bank $3f
mul8x8      := $FCD6; bank $3f
mul16x16    := $FCF5; bank $3f
flagTargetBit   := $FD20; bank $3f
clearTargetBit  := $FD2C; bank $3f
maskTargetBit   := $FD38; bank $3f
shiftLeftN  := $FD3C; bank $3f
shiftRightN := $FD43; bank $3f
copyTo_$7ad7_x_Until0:= $FD4A               ; bank $3f
get2byteAtBank18:= $FD60; bank $3f
loadTo7400Ex    := $FDA6; bank $3f
copyTo7400  := $FDDC; bank $3f
call_bank30_9e58:= $FDF3; bank $3f
thunk_await_nmi_by_set_handler:= $FF00      ; bank $3f
call_switchFirst2Banks:= $FF03              ; bank $3f
call_switch1stBank:= $FF06                  ; bank $3f
call_switch2ndBank:= $FF09                  ; bank $3f
switch_1st_page := $FF0C; bank $3f
switch_2pages   := $FF17; bank $3f
switch_2nd_page := $FF1F; bank $3f
nmi_handler_01  := $FF2A; bank $3f
setNmiHandlerTo_ff2a_andWaitNmi:= $FF36     ; bank $3f
hardware_vectors:= $FFF0; bank $3f
; ----------------------------------------------------------------------------
.L_A7CD:
  jsr thunk_await_nmi_by_set_handler  ; A7CD 20 00 FF
    lda #$02    ; A7D0 A9 02
    sta $4014   ; A7D2 8D 14 40
    inc <$F0     ; A7D5 E6 F0
    jsr .L_C758   ; A7D7 20 58 C7
    jsr field.init_sprites_cache    ; A7DA 20 86 C4
    jsr .L_9119   ; A7DD 20 19 91
    jsr .L_912A   ; A7E0 20 2A 91
    jsr .L_914C   ; A7E3 20 4C 91
    ldx <$26     ; A7E6 A6 26
    bit <$B4     ; A7E8 24 B4
    bvc .L_A810   ; A7EA 50 24
    lda <$B5     ; A7EC A5 B5
    asl a       ; A7EE 0A
    asl a       ; A7EF 0A
    asl a       ; A7F0 0A
    sta $0200,x ; A7F1 9D 00 02
    lda #$E8    ; A7F4 A9 E8
    sta $0201,x ; A7F6 9D 01 02
    lda #$83    ; A7F9 A9 83
    ldy <$37     ; A7FB A4 37
    bne .L_A801   ; A7FD D0 02
    lda #$80    ; A7FF A9 80
.L_A801:
  sta $0202,x ; A801 9D 02 02
    lda <$B6     ; A804 A5 B6
    asl a       ; A806 0A
    asl a       ; A807 0A
    asl a       ; A808 0A
    sta $0203,x ; A809 9D 03 02
    inx             ; A80C E8
    inx             ; A80D E8
    inx             ; A80E E8
    inx             ; A80F E8
.L_A810:
  bit <$B4     ; A810 24 B4
    bpl .L_A838   ; A812 10 24
    lda <$B7     ; A814 A5 B7
    asl a       ; A816 0A
    asl a       ; A817 0A
    asl a       ; A818 0A
    sta $0200,x ; A819 9D 00 02
    lda #$E8    ; A81C A9 E8
    sta $0201,x ; A81E 9D 01 02
    lda #$03    ; A821 A9 03
    ldy <$37     ; A823 A4 37
    bne .L_A829   ; A825 D0 02
    lda #$00    ; A827 A9 00
.L_A829:
  sta $0202,x ; A829 9D 02 02
    lda <$B8     ; A82C A5 B8
    asl a       ; A82E 0A
    asl a       ; A82F 0A
    asl a       ; A830 0A
    sta $0203,x ; A831 9D 03 02
    inx             ; A834 E8
    inx             ; A835 E8
    inx             ; A836 E8
    inx             ; A837 E8
.L_A838:
  stx <$26     ; A838 86 26
    rts             ; A83A 60
; ----------------------------------------------------------------------------
    jsr menu.init_cursor_pos        ; A83B 20 92 95
    jsr menu.main.erase             ; A83E 20 85 A6
    jsr menu.upload_default_bg_attrs    ; A841 20 6F 95
    lda #$00    ; A844 A9 00
    sta <$A2     ; A846 85 A2
    sta <$A3     ; A848 85 A3
    jsr .L_A864   ; A84A 20 64 A8
.L_A84D:
  jsr .L_A7CD   ; A84D 20 CD A7
    ldx <$7F     ; A850 A6 7F
    jsr .L_8129   ; A852 20 29 81
    jsr floor.getInputOrFireObjectEvent ; A855 20 19 D2
    lda <$24     ; A858 A5 24
    ora <$25     ; A85A 05 25
    beq .L_A84D   ; A85C F0 EF
    jsr .L_8F74   ; A85E 20 74 8F
    jmp menu.main.erase             ; A861 4C 85 A6
; ----------------------------------------------------------------------------
.L_A864:
  ldx #$1D    ; A864 A2 1D
    lda #$47    ; A866 A9 47
    jsr .L_A875   ; A868 20 75 A8
    ldx #$1C    ; A86B A2 1C
    jsr menu.draw_window_box        ; A86D 20 F1 AA
    lda #$37    ; A870 A9 37
    jmp menu.stream_window_content  ; A872 4C 6B A6
; ----------------------------------------------------------------------------
.L_A875:
  pha             ; A875 48
    jsr menu.draw_window_box        ; A876 20 F1 AA
    pla             ; A879 68
