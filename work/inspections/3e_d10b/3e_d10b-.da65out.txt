; da65 V2.11.0 - (C) Copyright 2000-2005,  Ullrich von Bassewitz
; Created:    2017-12-24 07:35:31
; Input file: D:\Documents\programming\eclipse workspaces\ff3\hack-and-patch\work\base-binary\ff3_plain.nes.noheader
; Page:   1


    .setcpu "65C02"

; ----------------------------------------------------------------------------
beginBattle := $C049; bank $3e
menu.opening.title_page:= $C06E             ; bank $3e
field.enterDungeon:= $C1BB                  ; bank $3e
field.dispatchInput:= $C243                 ; bank $3e
field_OnStart   := $C269; bank $3e
field_doScroll  := $C389; bank $3e
field_setScroll := $C398; bank $3e
field.init_sprites_cache:= $C486            ; bank $3e
field.OnMove    := $C4FC; bank $3e
field       := $C6B9; bank $3e
field.OnCharacterMoved:= $C6D5              ; bank $3e
field.getRandom := $C711; bank $3e
floor.getObjectEventPtr:= $C72C             ; bank $3e
field.call_sound_driver:= $C750             ; bank $3e
field.call_sound_driver_and_restore_banks:= $C758; bank $3e
dive_into_float_land:= $C966                ; bank $3e
switchToBank3C  := $C98A; bank $3e
field.update_window_attr_buff:= $C98F       ; bank $3e
field.set_bg_attr_for_window:= $C9A9        ; bank $3e
field.merge_bg_attributes_with_buffer:= $CAB1   ; bank $3e
field.copyToVramWith_07d0:= $CB6B           ; bank $3e
field.loadWarpDestinationFloor:= $CBA4      ; bank $3e
loadFloorData   := $CBFA; bank $3e
field.loadMapRow:= $CC47; bank $3e
field.getMapDataPointers:= $CCBB            ; bank $3e
vehicleSpeeds   := $CD76; bank $3e
getVehicleSpeed := $CD7E; bank $3e
getTileParamsVertical:= $CE7A               ; bank $3e
field.load_label_text_into_buffer:= $D1B1   ; bank $3e
field.queue_SE_of_valid_action:= $D20D      ; bank $3e
field.queue_SE_of_move_of_cursor:= $D213    ; bank $3e
floor.getInputOrFireObjectEvent:= $D219     ; bank $3e
field.getAndMaskInput:= $D27A               ; bank $3e
field.get_input := $D281; bank $3e
field_maskInput := $D29A; bank $3e
field.clear_all_sprites:= $D336             ; bank $3e
field.upload_palette:= $D381                ; bank $3e
menu.queue_SE_of_invalid_action:= $D529     ; bank $3e
floor.load_object_sprite_into_buffer:= $DA3A    ; bank $3e
loadPatternToVramEx:= $DE0F                 ; bank $3e
loadPatternToVram:= $DE1A                   ; bank $3e
loadSmallPatternToVram:= $DE2A              ; bank $3e
floor.loadPatternForTiles:= $DE5A           ; bank $3e
loadTilePatternToVram:= $DEEA               ; bank $3e
floor.loadObjectPatterns:= $DF08            ; bank $3e
floor.loadObjectPattern:= $DF41             ; bank $3e
dungeon.mainLoop:= $E1DC; bank $3f
floor.getInputAndHandleEvent:= $E2F8        ; bank $3f
floor.fireOnMove:= $E396; bank $3f
floor.getEventSourceCoodinates:= $E4E9      ; bank $3f
floor.getChipEvent:= $E51C                  ; bank $3f
floor.event05   := $E69B; bank $3f
floor.event07   := $E6BE; bank $3f
dungeon.loadFloor:= $E7EC                   ; bank $3f
dungeon.loadFloorData:= $E803               ; bank $3f
floor.processChipEvent:= $E917              ; bank $3f
OnTreasure  := $E982; bank $3f
floor.getObjectEvent:= $E9BB                ; bank $3f
floor.loadEventScriptStream:= $EA04         ; bank $3f
floor.cache_event_script:= $EA1B            ; bank $3f
floor.getEvent  := $EA26; bank $3f
switch_to_object_params_bank:= $EB23        ; bank $3f
switch_to_floor_logics_bank:= $EB28         ; bank $3f
field.scrolldown_item_window:= $EB2D        ; bank $3f
field.abort_item_window_scroll:= $EB3C      ; bank $3f
field.do_scrolldown_item_window:= $EB43     ; bank $3f
field.reflect_window_scroll:= $EB61         ; bank $3f
field.scrollup_item_window:= $EB69          ; bank $3f
field.seek_text_to_next_line:= $EBA9        ; bank $3f
field.unseek_text_to_line_beginning:= $EBD1 ; bank $3f
field.show_sprites_on_lower_half_screen:= $EC0C ; bank $3f
field.show_sprites_on_region7:= $EC12       ; bank $3f
field.hide_sprites_under_window:= $EC18     ; bank $3f
field.showhide_sprites_by_region:= $EC1A    ; bank $3f
u8          := $EC67; bank $3f
field.show_message_UNKNOWN:= $EC83          ; bank $3f
field.show_message_window:= $EC8B           ; bank $3f
field.show_window:= $EC8D                   ; bank $3f
field.await_and_get_new_input:= $ECAB       ; bank $3f
field.get_next_input:= $ECBD                ; bank $3f
field.get_next_input:= $ECC4                ; bank $3f
field.advance_frame_with_sound:= $ECD8      ; bank $3f
field.draw_window_top:= $ECE5               ; bank $3f
restore_banks_by_$57:= $ECF5                ; bank $3f
field.draw_in_place_window:= $ECFA          ; bank $3f
field.draw_window_box:= $ED02               ; bank $3f
field.init_window_attr_buffer:= $ED56       ; bank $3f
field.get_window_region:= $ED61             ; bank $3f
field.draw_window_row:= $EDC6               ; bank $3f
field.sync_ppu_scroll:= $EDE1               ; bank $3f
field.getWindowTilesForTop:= $EDF6          ; bank $3f
field.getWindowTilesForMiddle:= $EE1D       ; bank $3f
field.getWindowTilesForBottom:= $EE3E       ; bank $3f
field.stream_string_in_window:= $EE65       ; bank $3f
field.load_and_draw_string:= $EE9A          ; bank $3f
field.draw_string_in_window:= $EEC0         ; bank $3f
textd.draw_in_box:= $EEFA                   ; bank $3f
textd.eval_replacement:= $F02A              ; bank $3f
field.string.eval_code_10_13:= $F239        ; bank $3f
field.get_max_available_job_id:= $F38A      ; bank $3f
textd.setup_output_ptr_to_next_column:= $F3AC   ; bank $3f
textd.save_text_ptr:= $F3E4                 ; bank $3f
textd.restore_text_ptr:= $F3ED              ; bank $3f
textd.trim_name_left:= $F3FA                ; bank $3f
field.set_vram_addr_for_window:= $F40A      ; bank $3f
field.get_vram_addr_of_line_above:= $F435   ; bank $3f
menu.erase_message_area:= $F44B             ; bank $3f
menu.erase_box_1e_x_14:= $F461              ; bank $3f
menu.erase_box_1e_x_1c:= $F465              ; bank $3f
menu.erase_box_of_width_1e:= $F467          ; bank $3f
menu.erase_box_from_bottom:= $F47A          ; bank $3f
floor.get_treasure:= $F549                  ; bank $3f
floor.get_treasure_item_id:= $F5C4          ; bank $3f
floor.get_item_price:= $F5D4                ; bank $3f
increment_gil   := $F5FF; bank $3f
invert_treasure_loot_flag:= $F640           ; bank $3f
field.calc_draw_width_and_init_window_tile_buffer:= $F670; bank $3f
field.init_window_tile_buffer:= $F683       ; bank $3f
field.draw_window_content:= $F692           ; bank $3f
field.upload_window_content:= $F6AA         ; bank $3f
switch_to_character_logics_bank:= $F727     ; bank $3f
call_doBattle   := $F800; bank $3f
.L_F803       := $F803
.L_F806       := $F806
restoreFieldVariables:= $F83B               ; bank $3f
call_32_8000    := $F854; bank $3f
ppud.upload_palette:= $F897                 ; bank $3f
do_sprite_dma_from_0200:= $F8AA             ; bank $3f
ppud.update_sprites_and_palette_after_nmi:= $F8B0; bank $3f
ppud.update_palette_after_nmi:= $F8BC       ; bank $3f
ppud.update_sprites_after_nmi:= $F8C5       ; bank $3f
ppud.sync_registers_with_cache:= $F8CB      ; bank $3f
ppud.set_vram_addr:= $F8E0                  ; bank $3f
mul8x8_reg  := $F8EA; bank $3f
offset$7e_16    := $F8F2; bank $3f
offset$80_16    := $F8FE; bank $3f
memcpy      := $F92F; bank $3f
copy_to_vram_with_encounter_mode:= $F942    ; bank $3f
copyToVramDirect:= $F969; bank $3f
copyToVram  := $F970; bank $3f
call_2e_9d53    := $FA0E; bank $3f
blackOutScreen  := $FA1D; bank $3f
doBattle    := $FA26; bank $3f
saveNmiIrqHandlerAndSetHandlerForBattle:= $FAB5 ; bank $3f
restoreIrqHandlerAndNmiHandler:= $FADD      ; bank $3f
saveFieldVars   := $FB17; bank $3f
irq_handler := $FB30; bank $3f
ppud.nmi_handler:= $FB57; bank $3f
ppud.await_nmi_completion:= $FB80           ; bank $3f
switch_16k_synchronized:= $FB87             ; bank $3f
switch_16k_synchronized_nocache:= $FB89     ; bank $3f
getPad1Input    := $FBAA; bank $3f
getBattleRandom := $FBEF; bank $3f
initBattleRandom:= $FC27; bank $3f
div         := $FC92; bank $3f
mul8x8      := $FCD6; bank $3f
mul16x16    := $FCF5; bank $3f
flagTargetBit   := $FD20; bank $3f
clearTargetBit  := $FD2C; bank $3f
maskTargetBit   := $FD38; bank $3f
shiftLeftN  := $FD3C; bank $3f
shiftRightN := $FD43; bank $3f
copyTo_$7ad7_x_Until0:= $FD4A               ; bank $3f
get2byteAtBank18:= $FD60; bank $3f
loadTo7400Ex    := $FDA6; bank $3f
copyTo7400  := $FDDC; bank $3f
call_bank30_9e58:= $FDF3; bank $3f
thunk_await_nmi_by_set_handler:= $FF00      ; bank $3f
call_switchFirst2Banks:= $FF03              ; bank $3f
call_switch1stBank:= $FF06                  ; bank $3f
call_switch2ndBank:= $FF09                  ; bank $3f
switch_1st_page := $FF0C; bank $3f
switch_2pages   := $FF17; bank $3f
switch_2nd_page := $FF1F; bank $3f
nmi_handler_01  := $FF2A; bank $3f
setNmiHandlerTo_ff2a_andWaitNmi:= $FF36     ; bank $3f
hardware_vectors:= $FFF0; bank $3f
; ----------------------------------------------------------------------------
    jsr .L_F803   ; D10B 20 03 F8
    lda #$3C    ; D10E A9 3C
    jmp call_switchFirst2Banks      ; D110 4C 03 FF
; ----------------------------------------------------------------------------
    pha             ; D113 48
    ldx #$00    ; D114 A2 00
    jsr .L_F806   ; D116 20 06 F8
    cmp #$01    ; D119 C9 01
    rol <$80     ; D11B 26 80
    pla             ; D11D 68
    pha             ; D11E 48
    ldx #$40    ; D11F A2 40
    jsr .L_F806   ; D121 20 06 F8
    cmp #$01    ; D124 C9 01
    rol <$80     ; D126 26 80
    pla             ; D128 68
    pha             ; D129 48
    ldx #$80    ; D12A A2 80
    jsr .L_F806   ; D12C 20 06 F8
    cmp #$01    ; D12F C9 01
    rol <$80     ; D131 26 80
    pla             ; D133 68
    ldx #$C0    ; D134 A2 C0
    jsr .L_F806   ; D136 20 06 F8
    cmp #$01    ; D139 C9 01
    rol <$80     ; D13B 26 80
    lda #$3C    ; D13D A9 3C
    jmp call_switchFirst2Banks      ; D13F 4C 03 FF
; ----------------------------------------------------------------------------
    ldx <$7F     ; D142 A6 7F
    lda $6200,x ; D144 BD 00 62
    jsr .L_D181   ; D147 20 81 D1
    ldx <$7F     ; D14A A6 7F
    lda $6201,x ; D14C BD 01 62
    jsr .L_D181   ; D14F 20 81 D1
    ldx <$7F     ; D152 A6 7F
    lda $6202,x ; D154 BD 02 62
    jsr .L_D181   ; D157 20 81 D1
    ldx <$7F     ; D15A A6 7F
    lda $6203,x ; D15C BD 03 62
    jsr .L_D181   ; D15F 20 81 D1
    ldx <$7F     ; D162 A6 7F
    lda $6205,x ; D164 BD 05 62
    jsr .L_D181   ; D167 20 81 D1
    ldx #$00    ; D16A A2 00
    stx <$8F     ; D16C 86 8F
.L_D16E:
  lda $60C0,x ; D16E BD C0 60
    jsr .L_D181   ; D171 20 81 D1
    inc <$8F     ; D174 E6 8F
    ldx <$8F     ; D176 A6 8F
    cpx #$20    ; D178 E0 20
    bcc .L_D16E   ; D17A 90 F2
    lda #$3C    ; D17C A9 3C
    jmp call_switchFirst2Banks      ; D17E 4C 03 FF
; ----------------------------------------------------------------------------
.L_D181:
  beq .L_D197   ; D181 F0 14
    tax             ; D183 AA
    cmp #$98    ; D184 C9 98
    bcs .L_D194   ; D186 B0 0C
.L_D188:
  pha             ; D188 48
    ldx <$7F     ; D189 A6 7F
    jsr .L_F806   ; D18B 20 06 F8
    sta <$80     ; D18E 85 80
    pla             ; D190 68
    tax             ; D191 AA
    lda <$80     ; D192 A5 80
.L_D194:
  sta $7200,x ; D194 9D 00 72
.L_D197:
  rts             ; D197 60
; ----------------------------------------------------------------------------
    ldx #$00    ; D198 A2 00
    stx <$8F     ; D19A 86 8F
.L_D19C:
  lda $7C00,x ; D19C BD 00 7C
    beq .L_D1A4   ; D19F F0 03
    jsr .L_D188   ; D1A1 20 88 D1
.L_D1A4:
  inc <$8F     ; D1A4 E6 8F
    ldx <$8F     ; D1A6 A6 8F
    cpx #$18    ; D1A8 E0 18
    bcc .L_D19C   ; D1AA 90 F0
    lda #$3C    ; D1AC A9 3C
    jmp call_switchFirst2Banks      ; D1AE 4C 03 FF
; ----------------------------------------------------------------------------
