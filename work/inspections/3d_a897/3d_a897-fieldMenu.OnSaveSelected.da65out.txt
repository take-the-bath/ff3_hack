; da65 V2.11.0 - (C) Copyright 2000-2005,  Ullrich von Bassewitz
; Created:    2017-12-23 22:51:09
; Input file: D:\Documents\programming\eclipse workspaces\ff3\hack-and-patch\work\base-binary\ff3_plain.nes.noheader
; Page:   1


    .setcpu "65C02"

; ----------------------------------------------------------------------------
menu.select_pc.put_pc_sprites:= $8000       ; bank $3c
.L_8241       := $8241
menu.accept_input_action:= $8F74            ; bank $3c
menu.items.save_render_params:= $903D       ; bank $3c
menu.items.load_render_params:= $9075       ; bank $3c
menu.put_cursor_on_window1:= $9119          ; bank $3c
menu.put_cursor_on_window2:= $912A          ; bank $3c
menu.put_cursor_on_window3:= $914C          ; bank $3c
menu.put_cursor_attrs_on_sprite_cache:= $9164   ; bank $3c
menu.get_input_and_queue_SE:= $9175         ; bank $3c
fieldMenu.updateCursorPos:= $91A3           ; bank $3c
.L_91D9       := $91D9
menu.items.get_input_and_scroll:= $920D     ; bank $3c
floor.copyEventScriptStream:= $92F3         ; bank $3c
getEventFlag    := $9344; bank $3c
floor.searchSpaceForItem:= $937E            ; bank $3c
menu.upload_default_bg_attrs:= $956F        ; bank $3c
menu.init_input_states:= $9592              ; bank $3c
menu.init_ppu   := $959F; bank $3c
jobMenu.main    := $962F; bank $3c
menu.items.on_close:= $9EBC                 ; bank $3c
menu.items.main_loop:= $9EC2                ; bank $3c
checkmagic  := $A2DF; bank $3d
menu.pc_select.draw_window:= $A328          ; bank $3d
menu.pc_select.load_states:= $A38E          ; bank $3d
menu.pc_select.save_states:= $A3A8          ; bank $3d
menu.main_loop  := $A52F; bank $3d
menu.draw_window:= $A666; bank $3d
menu.stream_window_content:= $A66B          ; bank $3d
menu.draw_window_content:= $A678            ; bank $3d
menu.main.erase := $A685; bank $3d
fieldMenu.selectCharacter:= $A6B4           ; bank $3d
menu.render_cursor:= $A7CD                  ; bank $3d
field.loadAndDrawString:= $A87A             ; bank $3d
saveMenu.close  := $A88C; bank $3d
menu.savefile.draw_file_summary:= $A9E1     ; bank $3d
menu.savefile.load_game_at:= $A9F9          ; bank $3d
menu.savefile.load_game:= $AA06             ; bank $3d
menu.savefile.save_or_load_current_game_with_buffer:= $AA18; bank $3d
.L_AA4B       := $AA4B
.L_AA67       := $AA67
menu.get_window_metrics:= $AABC             ; bank $3d
menu.draw_window_box:= $AAF1                ; bank $3d
field.menu_window_metrics:= $AAF7           ; bank $3d
jobMenu.getCosts:= $AD85; bank $3d
getJobParameter := $ADF2; bank $3d
.L_AE5C       := $AE5C
floor.shop  := $B0EB; bank $3d
floor.shop.getItemValues:= $B220            ; bank $3d
floor.shop.getSellingPrice:= $B248          ; bank $3d
floor.shop.getItemValue:= $B270             ; bank $3d
menu.stomach.build_content_text:= $B570     ; bank $3d
getEncounterId  := $BD4D; bank $3d
isEncounterOccured:= $BDB9                  ; bank $3d
beginBattle := $C049; bank $3e
menu.opening.title_page:= $C06E             ; bank $3e
field.enterDungeon:= $C1BB                  ; bank $3e
field.dispatchInput:= $C243                 ; bank $3e
field_OnStart   := $C269; bank $3e
field_doScroll  := $C389; bank $3e
field_setScroll := $C398; bank $3e
field.init_sprites_cache:= $C486            ; bank $3e
field.OnMove    := $C4FC; bank $3e
field       := $C6B9; bank $3e
field.OnCharacterMoved:= $C6D5              ; bank $3e
field.getRandom := $C711; bank $3e
floor.getObjectEventPtr:= $C72C             ; bank $3e
field.call_sound_driver:= $C750             ; bank $3e
field.call_sound_driver_and_restore_banks:= $C758; bank $3e
dive_into_float_land:= $C966                ; bank $3e
switchToBank3C  := $C98A; bank $3e
field.update_window_attr_buff:= $C98F       ; bank $3e
field.set_bg_attr_for_window:= $C9A9        ; bank $3e
field.merge_bg_attributes_with_buffer:= $CAB1   ; bank $3e
field.copyToVramWith_07d0:= $CB6B           ; bank $3e
field.loadWarpDestinationFloor:= $CBA4      ; bank $3e
loadFloorData   := $CBFA; bank $3e
field.loadMapRow:= $CC47; bank $3e
field.getMapDataPointers:= $CCBB            ; bank $3e
vehicleSpeeds   := $CD76; bank $3e
getVehicleSpeed := $CD7E; bank $3e
getTileParamsVertical:= $CE7A               ; bank $3e
field.load_label_text_into_buffer:= $D1B1   ; bank $3e
field.queue_SE_of_valid_action:= $D20D      ; bank $3e
field.queue_SE_of_move_of_cursor:= $D213    ; bank $3e
floor.getInputOrFireObjectEvent:= $D219     ; bank $3e
field.getAndMaskInput:= $D27A               ; bank $3e
field.get_input := $D281; bank $3e
field_maskInput := $D29A; bank $3e
field.clear_all_sprites:= $D336             ; bank $3e
field.upload_palette:= $D381                ; bank $3e
menu.queue_SE_of_invalid_action:= $D529     ; bank $3e
floor.load_object_sprite_into_buffer:= $DA3A    ; bank $3e
.L_DD06       := $DD06
loadPatternToVramEx:= $DE0F                 ; bank $3e
loadPatternToVram:= $DE1A                   ; bank $3e
loadSmallPatternToVram:= $DE2A              ; bank $3e
floor.loadPatternForTiles:= $DE5A           ; bank $3e
loadTilePatternToVram:= $DEEA               ; bank $3e
floor.loadObjectPatterns:= $DF08            ; bank $3e
floor.loadObjectPattern:= $DF41             ; bank $3e
dungeon.mainLoop:= $E1DC; bank $3f
floor.getInputAndHandleEvent:= $E2F8        ; bank $3f
floor.fireOnMove:= $E396; bank $3f
floor.getEventSourceCoodinates:= $E4E9      ; bank $3f
floor.getChipEvent:= $E51C                  ; bank $3f
floor.event05   := $E69B; bank $3f
floor.event07   := $E6BE; bank $3f
dungeon.loadFloor:= $E7EC                   ; bank $3f
dungeon.loadFloorData:= $E803               ; bank $3f
floor.processChipEvent:= $E917              ; bank $3f
OnTreasure  := $E982; bank $3f
floor.getObjectEvent:= $E9BB                ; bank $3f
floor.loadEventScriptStream:= $EA04         ; bank $3f
floor.cache_event_script:= $EA1B            ; bank $3f
floor.getEvent  := $EA26; bank $3f
switch_to_object_params_bank:= $EB23        ; bank $3f
switch_to_floor_logics_bank:= $EB28         ; bank $3f
field.scrolldown_item_window:= $EB2D        ; bank $3f
field.abort_item_window_scroll:= $EB3C      ; bank $3f
field.do_scrolldown_item_window:= $EB43     ; bank $3f
field.reflect_window_scroll:= $EB61         ; bank $3f
field.scrollup_item_window:= $EB69          ; bank $3f
field.seek_text_to_next_line:= $EBA9        ; bank $3f
field.unseek_text_to_line_beginning:= $EBD1 ; bank $3f
field.show_sprites_on_lower_half_screen:= $EC0C ; bank $3f
field.show_sprites_on_region7:= $EC12       ; bank $3f
field.hide_sprites_under_window:= $EC18     ; bank $3f
field.showhide_sprites_by_region:= $EC1A    ; bank $3f
u8          := $EC67; bank $3f
field.show_message_UNKNOWN:= $EC83          ; bank $3f
field.show_message_window:= $EC8B           ; bank $3f
field.show_window:= $EC8D                   ; bank $3f
field.await_and_get_new_input:= $ECAB       ; bank $3f
field.get_next_input:= $ECBD                ; bank $3f
field.get_next_input:= $ECC4                ; bank $3f
field.advance_frame_with_sound:= $ECD8      ; bank $3f
field.draw_window_top:= $ECE5               ; bank $3f
restore_banks_by_$57:= $ECF5                ; bank $3f
field.draw_in_place_window:= $ECFA          ; bank $3f
field.draw_window_box:= $ED02               ; bank $3f
field.init_window_attr_buffer:= $ED56       ; bank $3f
field.get_window_region:= $ED61             ; bank $3f
field.draw_window_row:= $EDC6               ; bank $3f
field.sync_ppu_scroll:= $EDE1               ; bank $3f
field.getWindowTilesForTop:= $EDF6          ; bank $3f
field.getWindowTilesForMiddle:= $EE1D       ; bank $3f
field.getWindowTilesForBottom:= $EE3E       ; bank $3f
field.stream_string_in_window:= $EE65       ; bank $3f
field.load_and_draw_string:= $EE9A          ; bank $3f
field.draw_string_in_window:= $EEC0         ; bank $3f
textd.draw_in_box:= $EEFA                   ; bank $3f
textd.eval_replacement:= $F02A              ; bank $3f
field.string.eval_code_10_13:= $F239        ; bank $3f
field.get_max_available_job_id:= $F38A      ; bank $3f
textd.setup_output_ptr_to_next_column:= $F3AC   ; bank $3f
textd.save_text_ptr:= $F3E4                 ; bank $3f
textd.restore_text_ptr:= $F3ED              ; bank $3f
textd.trim_name_left:= $F3FA                ; bank $3f
field.set_vram_addr_for_window:= $F40A      ; bank $3f
field.get_vram_addr_of_line_above:= $F435   ; bank $3f
menu.savefile.erase_windows:= $F44B         ; bank $3f
menu.erase_box_1e_x_14:= $F461              ; bank $3f
menu.erase_box_1e_x_1c:= $F465              ; bank $3f
menu.erase_box_of_width_1e:= $F467          ; bank $3f
menu.erase_box_from_bottom:= $F47A          ; bank $3f
floor.get_treasure:= $F549                  ; bank $3f
floor.get_treasure_item_id:= $F5C4          ; bank $3f
floor.get_item_price:= $F5D4                ; bank $3f
increment_gil   := $F5FF; bank $3f
invert_treasure_loot_flag:= $F640           ; bank $3f
field.calc_draw_width_and_init_window_tile_buffer:= $F670; bank $3f
field.init_window_tile_buffer:= $F683       ; bank $3f
field.draw_window_content:= $F692           ; bank $3f
field.upload_window_content:= $F6AA         ; bank $3f
switch_to_character_logics_bank:= $F727     ; bank $3f
call_doBattle   := $F800; bank $3f
restoreFieldVariables:= $F83B               ; bank $3f
call_32_8000    := $F854; bank $3f
ppud.upload_palette:= $F897                 ; bank $3f
do_sprite_dma_from_0200:= $F8AA             ; bank $3f
ppud.update_sprites_and_palette_after_nmi:= $F8B0; bank $3f
ppud.update_palette_after_nmi:= $F8BC       ; bank $3f
ppud.update_sprites_after_nmi:= $F8C5       ; bank $3f
ppud.sync_registers_with_cache:= $F8CB      ; bank $3f
ppud.set_vram_addr:= $F8E0                  ; bank $3f
mul8x8_reg  := $F8EA; bank $3f
offset$7e_16    := $F8F2; bank $3f
offset$80_16    := $F8FE; bank $3f
memcpy      := $F92F; bank $3f
copy_to_vram_with_encounter_mode:= $F942    ; bank $3f
copyToVramDirect:= $F969; bank $3f
copyToVram  := $F970; bank $3f
call_2e_9d53    := $FA0E; bank $3f
blackOutScreen  := $FA1D; bank $3f
doBattle    := $FA26; bank $3f
saveNmiIrqHandlerAndSetHandlerForBattle:= $FAB5 ; bank $3f
restoreIrqHandlerAndNmiHandler:= $FADD      ; bank $3f
saveFieldVars   := $FB17; bank $3f
irq_handler := $FB30; bank $3f
ppud.nmi_handler:= $FB57; bank $3f
ppud.await_nmi_completion:= $FB80           ; bank $3f
switch_16k_synchronized:= $FB87             ; bank $3f
switch_16k_synchronized_nocache:= $FB89     ; bank $3f
getPad1Input    := $FBAA; bank $3f
getBattleRandom := $FBEF; bank $3f
initBattleRandom:= $FC27; bank $3f
div         := $FC92; bank $3f
mul8x8      := $FCD6; bank $3f
mul16x16    := $FCF5; bank $3f
flagTargetBit   := $FD20; bank $3f
clearTargetBit  := $FD2C; bank $3f
maskTargetBit   := $FD38; bank $3f
shiftLeftN  := $FD3C; bank $3f
shiftRightN := $FD43; bank $3f
copyTo_$7ad7_x_Until0:= $FD4A               ; bank $3f
get2byteAtBank18:= $FD60; bank $3f
loadTo7400Ex    := $FDA6; bank $3f
copyTo7400  := $FDDC; bank $3f
call_bank30_9e58:= $FDF3; bank $3f
thunk_await_nmi_by_set_handler:= $FF00      ; bank $3f
call_switchFirst2Banks:= $FF03              ; bank $3f
call_switch1stBank:= $FF06                  ; bank $3f
call_switch2ndBank:= $FF09                  ; bank $3f
switch_1st_page := $FF0C; bank $3f
switch_2pages   := $FF17; bank $3f
switch_2nd_page := $FF1F; bank $3f
nmi_handler_01  := $FF2A; bank $3f
setNmiHandlerTo_ff2a_andWaitNmi:= $FF36     ; bank $3f
hardware_vectors:= $FFF0; bank $3f
; ----------------------------------------------------------------------------
; bank $3d
fieldMenu.OnSaveSelected:
    lda $7F38   ; A897 AD 38 7F
    cmp #$55    ; A89A C9 55
    bne .L_A8A5   ; A89C D0 07
    lda $7F39   ; A89E AD 39 7F
    cmp #$AA    ; A8A1 C9 AA
    beq .L_A8B4   ; A8A3 F0 0F
.L_A8A5:
    lda #$55    ; A8A5 A9 55
    sta $7F38   ; A8A7 8D 38 7F
    lda #$AA    ; A8AA A9 AA
    sta $7F39   ; A8AC 8D 39 7F
    lda #$01    ; A8AF A9 01
    sta $7F3A   ; A8B1 8D 3A 7F
.L_A8B4:
    lda $7F3A   ; A8B4 AD 3A 7F
    sta $6014   ; A8B7 8D 14 60
    jsr .L_AE5C   ; A8BA 20 5C AE
    jsr menu.init_input_states      ; A8BD 20 92 95
    jsr menu.main.erase             ; A8C0 20 85 A6
    jsr menu.upload_default_bg_attrs    ; A8C3 20 6F 95
    lda #$00    ; A8C6 A9 00
    sta $2001   ; A8C8 8D 01 20
    jsr .L_DD06   ; A8CB 20 06 DD
    jsr thunk_await_nmi_by_set_handler  ; A8CE 20 00 FF
    lda #$02    ; A8D1 A9 02
    sta $4014   ; A8D3 8D 14 40
    jsr menu.init_ppu               ; A8D6 20 9F 95
    lda #$00    ; A8D9 A9 00
    sta <$A2     ; A8DB 85 A2
    sta <$A4     ; A8DD 85 A4
    lda #$01    ; A8DF A9 01
    sta <$A3     ; A8E1 85 A3
    lda #$00    ; A8E3 A9 00
    sta $79F0   ; A8E5 8D F0 79
    jsr .L_A984   ; A8E8 20 84 A9
.L_A8EB:
    jsr menu.render_cursor          ; A8EB 20 CD A7
    lda $79F0   ; A8EE AD F0 79
    lsr a       ; A8F1 4A
    lsr a       ; A8F2 4A
    and #$03    ; A8F3 29 03
    jsr .L_8241   ; A8F5 20 41 82
    lda #$04    ; A8F8 A9 04
    jsr .L_91D9   ; A8FA 20 D9 91
    lda <$25     ; A8FD A5 25
    bne saveMenu.close              ; A8FF D0 8B
    lda <$24     ; A901 A5 24
    beq .L_A8EB   ; A903 F0 E6
    jsr menu.accept_input_action    ; A905 20 74 8F
    lda #$4C    ; A908 A9 4C
    jsr .L_A996   ; A90A 20 96 A9
    lda #$01    ; A90D A9 01
    sta <$A2     ; A90F 85 A2
    lda #$00    ; A911 A9 00
    sta $78F0   ; A913 8D F0 78
.L_A916:
    jsr menu.render_cursor          ; A916 20 CD A7
    lda $79F0   ; A919 AD F0 79
    lsr a       ; A91C 4A
    lsr a       ; A91D 4A
    and #$03    ; A91E 29 03
    jsr .L_8241   ; A920 20 41 82
    lda #$04    ; A923 A9 04
    jsr fieldMenu.updateCursorPos   ; A925 20 A3 91
    lda <$25     ; A928 A5 25
    bne .L_A935   ; A92A D0 09
    lda <$24     ; A92C A5 24
    beq .L_A916   ; A92E F0 E6
    lda $78F0   ; A930 AD F0 78
    beq .L_A938   ; A933 F0 03
.L_A935:
    jmp saveMenu.close              ; A935 4C 8C A8
; ----------------------------------------------------------------------------
.L_A938:
    lda #$4D    ; A938 A9 4D
    jsr .L_A996   ; A93A 20 96 A9
    lda $7F3A   ; A93D AD 3A 7F
    clc             ; A940 18
    adc #$01    ; A941 69 01
    cmp #$64    ; A943 C9 64
    bcc .L_A949   ; A945 90 02
    lda #$01    ; A947 A9 01
.L_A949:
    sta $7F3A   ; A949 8D 3A 7F
    lda $79F0   ; A94C AD F0 79
    and #$0C    ; A94F 29 0C
    clc             ; A951 18
    adc #$64    ; A952 69 64
    sta <$83     ; A954 85 83
    lda #$00    ; A956 A9 00
    sta <$80     ; A958 85 80
    sta <$82     ; A95A 85 82
    lda #$60    ; A95C A9 60
    sta <$81     ; A95E 85 81
    ldy #$00    ; A960 A0 00
.L_A962:
    lda [$80],y ; A962 B1 80
    sta [$82],y ; A964 91 82
    iny             ; A966 C8
    bne .L_A962   ; A967 D0 F9
    inc <$81     ; A969 E6 81
    inc <$83     ; A96B E6 83
    lda <$81     ; A96D A5 81
    and #$03    ; A96F 29 03
    bne .L_A962   ; A971 D0 EF
    jsr .L_AA67   ; A973 20 67 AA
    jsr .L_AA4B   ; A976 20 4B AA
    lda #$4E    ; A979 A9 4E
    jsr .L_A996   ; A97B 20 96 A9
    jsr .L_AA4B   ; A97E 20 4B AA
    jmp saveMenu.close              ; A981 4C 8C A8
