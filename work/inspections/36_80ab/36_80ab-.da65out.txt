; da65 V2.11.0 - (C) Copyright 2000-2005,  Ullrich von Bassewitz
; Created:    2017-12-23 17:05:45
; Input file: D:\Documents\programming\eclipse workspaces\ff3\hack-and-patch\work\base-binary\ff3_plain.nes.noheader
; Page:   1


    .setcpu "65C02"

; ----------------------------------------------------------------------------
soundDriverEntry:= $8003; bank $36
playNoiseAndSquare1:= $8030                 ; bank $36
updateMusicStream:= $8925                   ; bank $36
sound.map_audio_stream_into_2nd_page:= $899F    ; bank $36
stopMusic   := $8AA7; bank $36
muteChannels    := $8AC0; bank $36
loadMusicData   := $8C58; bank $36
beginBattle := $C049; bank $3e
menu.opening.title_page:= $C06E             ; bank $3e
field.enterDungeon:= $C1BB                  ; bank $3e
field.dispatchInput:= $C243                 ; bank $3e
field_OnStart   := $C269; bank $3e
field_doScroll  := $C389; bank $3e
field_setScroll := $C398; bank $3e
field.init_sprites_cache:= $C486            ; bank $3e
field.OnMove    := $C4FC; bank $3e
field       := $C6B9; bank $3e
field.OnCharacterMoved:= $C6D5              ; bank $3e
field.getRandom := $C711; bank $3e
floor.getObjectEventPtr:= $C72C             ; bank $3e
field.callSoundDriver:= $C750               ; bank $3e
dive_into_float_land:= $C966                ; bank $3e
switchToBank3C  := $C98A; bank $3e
field.update_window_attr_buff:= $C98F       ; bank $3e
field.set_bg_attr_for_window:= $C9A9        ; bank $3e
field.merge_bg_attributes_with_buffer:= $CAB1   ; bank $3e
field.copyToVramWith_07d0:= $CB6B           ; bank $3e
field.loadWarpDestinationFloor:= $CBA4      ; bank $3e
loadFloorData   := $CBFA; bank $3e
field.loadMapRow:= $CC47; bank $3e
field.getMapDataPointers:= $CCBB            ; bank $3e
vehicleSpeeds   := $CD76; bank $3e
getVehicleSpeed := $CD7E; bank $3e
getTileParamsVertical:= $CE7A               ; bank $3e
field.load_label_text_into_buffer:= $D1B1   ; bank $3e
floor.getInputOrFireObjectEvent:= $D219     ; bank $3e
field.getAndMaskInput:= $D27A               ; bank $3e
field.get_input := $D281; bank $3e
field_maskInput := $D29A; bank $3e
field.clear_all_sprites:= $D336             ; bank $3e
field.upload_palette:= $D381                ; bank $3e
floor.load_object_sprite_into_buffer:= $DA3A    ; bank $3e
loadPatternToVramEx:= $DE0F                 ; bank $3e
loadPatternToVram:= $DE1A                   ; bank $3e
loadSmallPatternToVram:= $DE2A              ; bank $3e
floor.loadPatternForTiles:= $DE5A           ; bank $3e
loadTilePatternToVram:= $DEEA               ; bank $3e
floor.loadObjectPatterns:= $DF08            ; bank $3e
floor.loadObjectPattern:= $DF41             ; bank $3e
dungeon.mainLoop:= $E1DC; bank $3f
floor.getInputAndHandleEvent:= $E2F8        ; bank $3f
floor.fireOnMove:= $E396; bank $3f
floor.getEventSourceCoodinates:= $E4E9      ; bank $3f
floor.getChipEvent:= $E51C                  ; bank $3f
floor.event05   := $E69B; bank $3f
floor.event07   := $E6BE; bank $3f
dungeon.loadFloor:= $E7EC                   ; bank $3f
dungeon.loadFloorData:= $E803               ; bank $3f
floor.processChipEvent:= $E917              ; bank $3f
OnTreasure  := $E982; bank $3f
floor.getObjectEvent:= $E9BB                ; bank $3f
floor.loadEventScriptStream:= $EA04         ; bank $3f
floor.cache_event_script:= $EA1B            ; bank $3f
floor.getEvent  := $EA26; bank $3f
switch_to_object_params_bank:= $EB23        ; bank $3f
switch_to_floor_logics_bank:= $EB28         ; bank $3f
field.scrolldown_item_window:= $EB2D        ; bank $3f
field.abort_item_window_scroll:= $EB3C      ; bank $3f
field.do_scrolldown_item_window:= $EB43     ; bank $3f
field.reflect_window_scroll:= $EB61         ; bank $3f
field.scrollup_item_window:= $EB69          ; bank $3f
field.seek_text_to_next_line:= $EBA9        ; bank $3f
field.unseek_text_to_line_beginning:= $EBD1 ; bank $3f
field.show_sprites_on_lower_half_screen:= $EC0C ; bank $3f
field.show_sprites_on_region7:= $EC12       ; bank $3f
field.hide_sprites_under_window:= $EC18     ; bank $3f
field.showhide_sprites_by_region:= $EC1A    ; bank $3f
u8          := $EC67; bank $3f
field.show_message_UNKNOWN:= $EC83          ; bank $3f
field.show_message_window:= $EC8B           ; bank $3f
field.show_window:= $EC8D                   ; bank $3f
field.await_and_get_new_input:= $ECAB       ; bank $3f
field.get_next_input:= $ECBD                ; bank $3f
field.get_next_input:= $ECC4                ; bank $3f
field.advance_frame_with_sound:= $ECD8      ; bank $3f
field.draw_window_top:= $ECE5               ; bank $3f
restore_banks_by_$57:= $ECF5                ; bank $3f
field.draw_in_place_window:= $ECFA          ; bank $3f
field.draw_window_box:= $ED02               ; bank $3f
field.init_window_attr_buffer:= $ED56       ; bank $3f
field.get_window_region:= $ED61             ; bank $3f
field.draw_window_row:= $EDC6               ; bank $3f
field.sync_ppu_scroll:= $EDE1               ; bank $3f
field.getWindowTilesForTop:= $EDF6          ; bank $3f
field.getWindowTilesForMiddle:= $EE1D       ; bank $3f
field.getWindowTilesForBottom:= $EE3E       ; bank $3f
field.stream_string_in_window:= $EE65       ; bank $3f
field.load_and_draw_string:= $EE9A          ; bank $3f
field.draw_string_in_window:= $EEC0         ; bank $3f
textd.draw_in_box:= $EEFA                   ; bank $3f
textd.eval_replacement:= $F02A              ; bank $3f
field.string.eval_code_10_13:= $F239        ; bank $3f
field.get_max_available_job_id:= $F38A      ; bank $3f
textd.setup_output_ptr_to_next_column:= $F3AC   ; bank $3f
textd.save_text_ptr:= $F3E4                 ; bank $3f
textd.restore_text_ptr:= $F3ED              ; bank $3f
textd.trim_name_left:= $F3FA                ; bank $3f
field.set_vram_addr_for_window:= $F40A      ; bank $3f
field.get_vram_addr_of_line_above:= $F435   ; bank $3f
menu.savefile.erase_windows:= $F44B         ; bank $3f
menu.erase_box_1e_x_14:= $F461              ; bank $3f
menu.erase_box_1e_x_1c:= $F465              ; bank $3f
menu.erase_box_of_width_1e:= $F467          ; bank $3f
menu.erase_box_from_bottom:= $F47A          ; bank $3f
floor.get_treasure:= $F549                  ; bank $3f
floor.get_treasure_item_id:= $F5C4          ; bank $3f
floor.get_item_price:= $F5D4                ; bank $3f
increment_gil   := $F5FF; bank $3f
invert_treasure_loot_flag:= $F640           ; bank $3f
field.calc_draw_width_and_init_window_tile_buffer:= $F670; bank $3f
field.init_window_tile_buffer:= $F683       ; bank $3f
field.draw_window_content:= $F692           ; bank $3f
field.upload_window_content:= $F6AA         ; bank $3f
switch_to_character_logics_bank:= $F727     ; bank $3f
call_doBattle   := $F800; bank $3f
restoreFieldVariables:= $F83B               ; bank $3f
call_32_8000    := $F854; bank $3f
ppud.upload_palette:= $F897                 ; bank $3f
do_sprite_dma_from_0200:= $F8AA             ; bank $3f
ppud.update_sprites_and_palette_after_nmi:= $F8B0; bank $3f
ppud.update_palette_after_nmi:= $F8BC       ; bank $3f
ppud.update_sprites_after_nmi:= $F8C5       ; bank $3f
ppud.sync_registers_with_cache:= $F8CB      ; bank $3f
ppud.set_vram_addr:= $F8E0                  ; bank $3f
mul8x8_reg  := $F8EA; bank $3f
offset$7e_16    := $F8F2; bank $3f
offset$80_16    := $F8FE; bank $3f
memcpy      := $F92F; bank $3f
copy_to_vram_with_encounter_mode:= $F942    ; bank $3f
copyToVramDirect:= $F969; bank $3f
copyToVram  := $F970; bank $3f
call_2e_9d53    := $FA0E; bank $3f
blackOutScreen  := $FA1D; bank $3f
doBattle    := $FA26; bank $3f
saveNmiIrqHandlerAndSetHandlerForBattle:= $FAB5 ; bank $3f
restoreIrqHandlerAndNmiHandler:= $FADD      ; bank $3f
saveFieldVars   := $FB17; bank $3f
irq_handler := $FB30; bank $3f
ppud.nmi_handler:= $FB57; bank $3f
ppud.await_nmi_completion:= $FB80           ; bank $3f
switch_16k_synchronized:= $FB87             ; bank $3f
switch_16k_synchronized_nocache:= $FB89     ; bank $3f
getPad1Input    := $FBAA; bank $3f
getBattleRandom := $FBEF; bank $3f
initBattleRandom:= $FC27; bank $3f
div         := $FC92; bank $3f
mul8x8      := $FCD6; bank $3f
mul16x16    := $FCF5; bank $3f
flagTargetBit   := $FD20; bank $3f
clearTargetBit  := $FD2C; bank $3f
maskTargetBit   := $FD38; bank $3f
shiftLeftN  := $FD3C; bank $3f
shiftRightN := $FD43; bank $3f
copyTo_$7ad7_x_Until0:= $FD4A               ; bank $3f
get2byteAtBank18:= $FD60; bank $3f
loadTo7400Ex    := $FDA6; bank $3f
copyTo7400  := $FDDC; bank $3f
call_bank30_9e58:= $FDF3; bank $3f
thunk_await_nmi_by_set_handler:= $FF00      ; bank $3f
call_switchFirst2Banks:= $FF03              ; bank $3f
call_switch1stBank:= $FF06                  ; bank $3f
call_switch2ndBank:= $FF09                  ; bank $3f
switch_1st_page := $FF0C; bank $3f
switch_2pages   := $FF17; bank $3f
switch_2nd_page := $FF1F; bank $3f
nmi_handler_01  := $FF2A; bank $3f
setNmiHandlerTo_ff2a_andWaitNmi:= $FF36     ; bank $3f
hardware_vectors:= $FFF0; bank $3f
; ----------------------------------------------------------------------------
    lda $7F42   ; 80AB AD 42 7F
    bmi .L_80B1   ; 80AE 30 01
    rts             ; 80B0 60
; ----------------------------------------------------------------------------
.L_80B1:
  lda $7F4A   ; 80B1 AD 4A 7F
    bpl .L_80F5   ; 80B4 10 3F
    and #$01    ; 80B6 29 01
    beq .L_80E0   ; 80B8 F0 26
    lda $7F4A   ; 80BA AD 4A 7F
    and #$FE    ; 80BD 29 FE
    sta $7F4A   ; 80BF 8D 4A 7F
    lda $7F89   ; 80C2 AD 89 7F
    ora $7F7B   ; 80C5 0D 7B 7F
    sta $4000   ; 80C8 8D 00 40
    lda $7F82   ; 80CB AD 82 7F
    sta $4001   ; 80CE 8D 01 40
    lda $7F6D   ; 80D1 AD 6D 7F
    sta $4002   ; 80D4 8D 02 40
    lda $7F74   ; 80D7 AD 74 7F
    sta $4003   ; 80DA 8D 03 40
    jmp .L_80F5   ; 80DD 4C F5 80
; ----------------------------------------------------------------------------
.L_80E0:
  lda $7F89   ; 80E0 AD 89 7F
    ora $7F7B   ; 80E3 0D 7B 7F
    sta $4000   ; 80E6 8D 00 40
    lda $7F82   ; 80E9 AD 82 7F
    asl a       ; 80EC 0A
    bcs .L_80F5   ; 80ED B0 06
    lda $7F6D   ; 80EF AD 6D 7F
    sta $4002   ; 80F2 8D 02 40
.L_80F5:
  lda $7F4F   ; 80F5 AD 4F 7F
    bmi .L_813E   ; 80F8 30 44
    lda $7F4B   ; 80FA AD 4B 7F
    bpl .L_813E   ; 80FD 10 3F
    and #$01    ; 80FF 29 01
    beq .L_8129   ; 8101 F0 26
    lda $7F4B   ; 8103 AD 4B 7F
    and #$FE    ; 8106 29 FE
    sta $7F4B   ; 8108 8D 4B 7F
    lda $7F8A   ; 810B AD 8A 7F
    ora $7F7C   ; 810E 0D 7C 7F
    sta $4004   ; 8111 8D 04 40
    lda $7F83   ; 8114 AD 83 7F
    sta $4005   ; 8117 8D 05 40
    lda $7F6E   ; 811A AD 6E 7F
    sta $4006   ; 811D 8D 06 40
    lda $7F75   ; 8120 AD 75 7F
    sta $4007   ; 8123 8D 07 40
    jmp .L_813E   ; 8126 4C 3E 81
; ----------------------------------------------------------------------------
.L_8129:
  lda $7F8A   ; 8129 AD 8A 7F
    ora $7F7C   ; 812C 0D 7C 7F
    sta $4004   ; 812F 8D 04 40
    lda $7F83   ; 8132 AD 83 7F
    asl a       ; 8135 0A
    bcs .L_813E   ; 8136 B0 06
    lda $7F6E   ; 8138 AD 6E 7F
    sta $4006   ; 813B 8D 06 40
.L_813E:
  lda $7F4C   ; 813E AD 4C 7F
    bpl .L_8174   ; 8141 10 31
    and #$01    ; 8143 29 01
    beq .L_8166   ; 8145 F0 1F
    lda $7F4C   ; 8147 AD 4C 7F
    and #$FE    ; 814A 29 FE
    sta $7F4C   ; 814C 8D 4C 7F
    lda $7F7D   ; 814F AD 7D 7F
    ora #$80    ; 8152 09 80
    sta $4008   ; 8154 8D 08 40
    lda $7F6F   ; 8157 AD 6F 7F
    sta $400A   ; 815A 8D 0A 40
    lda $7F76   ; 815D AD 76 7F
    sta $400B   ; 8160 8D 0B 40
    jmp .L_8174   ; 8163 4C 74 81
; ----------------------------------------------------------------------------
.L_8166:
  lda $7F7D   ; 8166 AD 7D 7F
    ora #$80    ; 8169 09 80
    sta $4008   ; 816B 8D 08 40
    lda $7F6F   ; 816E AD 6F 7F
    sta $400A   ; 8171 8D 0A 40
.L_8174:
  lda $7F50   ; 8174 AD 50 7F
    bmi .L_81AC   ; 8177 30 33
    lda $7F4D   ; 8179 AD 4D 7F
    bpl .L_81AC   ; 817C 10 2E
    and #$01    ; 817E 29 01
    beq .L_819E   ; 8180 F0 1C
    lda $7F4D   ; 8182 AD 4D 7F
    and #$FE    ; 8185 29 FE
    sta $7F4D   ; 8187 8D 4D 7F
    lda $7F7E   ; 818A AD 7E 7F
    ora #$30    ; 818D 09 30
    sta $400C   ; 818F 8D 0C 40
    lda $7F70   ; 8192 AD 70 7F
    sta $400E   ; 8195 8D 0E 40
    sta $400F   ; 8198 8D 0F 40
    jmp .L_81AC   ; 819B 4C AC 81
; ----------------------------------------------------------------------------
.L_819E:
  lda $7F7E   ; 819E AD 7E 7F
    ora #$30    ; 81A1 09 30
    sta $400C   ; 81A3 8D 0C 40
    lda $7F70   ; 81A6 AD 70 7F
    sta $400E   ; 81A9 8D 0E 40
.L_81AC:
  lda $7F4E   ; 81AC AD 4E 7F
    bpl .L_81C2   ; 81AF 10 11
    and #$01    ; 81B1 29 01
    beq .L_81C2   ; 81B3 F0 0D
    lda $7F4E   ; 81B5 AD 4E 7F
    and #$FE    ; 81B8 29 FE
    sta $7F4E   ; 81BA 8D 4E 7F
    lda #$00    ; 81BD A9 00
    sta $4011   ; 81BF 8D 11 40
.L_81C2:
  rts             ; 81C2 60
; ----------------------------------------------------------------------------
    lda #$00    ; 81C3 A9 00
    sta $4015   ; 81C5 8D 15 40
    sta $4003   ; 81C8 8D 03 40
    sta $4007   ; 81CB 8D 07 40
    sta $400B   ; 81CE 8D 0B 40
    sta $400F   ; 81D1 8D 0F 40
    sta $7F42   ; 81D4 8D 42 7F
    sta $7F40   ; 81D7 8D 40 7F
    sta $7F49   ; 81DA 8D 49 7F
    ldx #$06    ; 81DD A2 06
.L_81DF:
  sta $7F4A,x ; 81DF 9D 4A 7F
    dex             ; 81E2 CA
    bpl .L_81DF   ; 81E3 10 FA
    rts             ; 81E5 60
; ----------------------------------------------------------------------------
